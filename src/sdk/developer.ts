/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { developerCreateDeveloperApp } from "../funcs/developerCreateDeveloperApp.js";
import { developerDeleteDeveloperApp } from "../funcs/developerDeleteDeveloperApp.js";
import { developerUpdateApp } from "../funcs/developerUpdateApp.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Developer extends ClientSDK {
  async createDeveloperApp(
    request: components.V1DeveloperAppCreateRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppCreateResponse> {
    return unwrapAsync(developerCreateDeveloperApp(
      this,
      request,
      options,
    ));
  }

  async deleteDeveloperApp(
    request: components.V1AccountDeveloperAppDeleteRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppDeleteResponse> {
    return unwrapAsync(developerDeleteDeveloperApp(
      this,
      request,
      options,
    ));
  }

  async updateApp(
    request: components.V1AccountDeveloperAppUpdateRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppUpdateResponse> {
    return unwrapAsync(developerUpdateApp(
      this,
      request,
      options,
    ));
  }
}
