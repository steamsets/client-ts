/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { settingsAccountV1SettingsEmailSendVerification } from "../funcs/settingsAccountV1SettingsEmailSendVerification.js";
import { settingsAccountV1SettingsEmailSubscribe } from "../funcs/settingsAccountV1SettingsEmailSubscribe.js";
import { settingsAccountV1SettingsEmailVerify } from "../funcs/settingsAccountV1SettingsEmailVerify.js";
import { settingsAccountV1SettingsUpdateRole } from "../funcs/settingsAccountV1SettingsUpdateRole.js";
import { settingsGet } from "../funcs/settingsGet.js";
import { settingsUpdate } from "../funcs/settingsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Settings extends ClientSDK {
  async accountV1SettingsEmailSendVerification(
    request: operations.AccountV1SettingsEmailSendVerificationRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsEmailSendVerificationResponse> {
    return unwrapAsync(settingsAccountV1SettingsEmailSendVerification(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsEmailSubscribe(
    request: operations.AccountV1SettingsEmailSubscribeRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsEmailSubscribeResponse> {
    return unwrapAsync(settingsAccountV1SettingsEmailSubscribe(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsEmailVerify(
    request: components.V1VerifyEmailRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsEmailVerifyResponse> {
    return unwrapAsync(settingsAccountV1SettingsEmailVerify(
      this,
      request,
      options,
    ));
  }

  async get(
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsGetResponse> {
    return unwrapAsync(settingsGet(
      this,
      options,
    ));
  }

  async accountV1SettingsUpdateRole(
    request: components.V1UpdateRoleRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsUpdateRoleResponse> {
    return unwrapAsync(settingsAccountV1SettingsUpdateRole(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.AccountV1SettingsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsUpdateResponse> {
    return unwrapAsync(settingsUpdate(
      this,
      request,
      options,
    ));
  }
}
