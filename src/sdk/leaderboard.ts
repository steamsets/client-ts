/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { leaderboardGetAccount } from "../funcs/leaderboardGetAccount.js";
import { leaderboardGetAccountsMeta } from "../funcs/leaderboardGetAccountsMeta.js";
import { leaderboardGetGroup } from "../funcs/leaderboardGetGroup.js";
import { leaderboardGetGroupsMeta } from "../funcs/leaderboardGetGroupsMeta.js";
import { leaderboardListBadges33 } from "../funcs/leaderboardListBadges33.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Leaderboard extends ClientSDK {
  async getAccount(
    request: components.V1LeaderboardGetAccountLeaderboardRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV1LeaderboardGetAccountLeaderboardResponse> {
    return unwrapAsync(leaderboardGetAccount(
      this,
      request,
      options,
    ));
  }

  async getAccountsMeta(
    request: components.V1LeaderboardGetAccountsMetaRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV1LeaderboardGetAccountsMetaResponse> {
    return unwrapAsync(leaderboardGetAccountsMeta(
      this,
      request,
      options,
    ));
  }

  async getGroup(
    request: components.V1LeaderboardGetGroupLeaderboardRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV1LeaderboardGetGroupLeaderboardResponse> {
    return unwrapAsync(leaderboardGetGroup(
      this,
      request,
      options,
    ));
  }

  async getGroupsMeta(
    request: components.V1LeaderboardGetGroupsMetaRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV1LeaderboardGetGroupsMetaResponse> {
    return unwrapAsync(leaderboardGetGroupsMeta(
      this,
      request,
      options,
    ));
  }

  async listBadges33(
    options?: RequestOptions,
  ): Promise<operations.PostV1LeaderboardListBadges33Response> {
    return unwrapAsync(leaderboardListBadges33(
      this,
      options,
    ));
  }
}
