/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountAccountV1ConnectionConnect } from "../funcs/accountAccountV1ConnectionConnect.js";
import { accountAccountV1ConnectionDeleteConnection } from "../funcs/accountAccountV1ConnectionDeleteConnection.js";
import { accountAccountV1ConnectionUpdateConnection } from "../funcs/accountAccountV1ConnectionUpdateConnection.js";
import { accountAccountV1ConnectionVerifyConnection } from "../funcs/accountAccountV1ConnectionVerifyConnection.js";
import { accountAccountV1GetApps } from "../funcs/accountAccountV1GetApps.js";
import { accountAccountV1GetBadges } from "../funcs/accountAccountV1GetBadges.js";
import { accountAccountV1GetDataPoints } from "../funcs/accountAccountV1GetDataPoints.js";
import { accountAccountV1GetFriends } from "../funcs/accountAccountV1GetFriends.js";
import { accountAccountV1GetInfo } from "../funcs/accountAccountV1GetInfo.js";
import { accountAccountV1GetLeaderboardHistory } from "../funcs/accountAccountV1GetLeaderboardHistory.js";
import { accountAccountV1GetStaff } from "../funcs/accountAccountV1GetStaff.js";
import { accountAccountV1Queue } from "../funcs/accountAccountV1Queue.js";
import { accountAccountV1SessionCreate } from "../funcs/accountAccountV1SessionCreate.js";
import { accountAccountV1SessionDelete } from "../funcs/accountAccountV1SessionDelete.js";
import { accountAccountV1SessionGet } from "../funcs/accountAccountV1SessionGet.js";
import { accountAccountV1SessionLogin } from "../funcs/accountAccountV1SessionLogin.js";
import { accountAccountV1SettingsDeleteImages } from "../funcs/accountAccountV1SettingsDeleteImages.js";
import { accountAccountV1SettingsGet } from "../funcs/accountAccountV1SettingsGet.js";
import { accountAccountV1SettingsSendEmailVerification } from "../funcs/accountAccountV1SettingsSendEmailVerification.js";
import { accountAccountV1SettingsUpdate } from "../funcs/accountAccountV1SettingsUpdate.js";
import { accountAccountV1SettingsUpdateImage } from "../funcs/accountAccountV1SettingsUpdateImage.js";
import { accountAccountV1SettingsUploadImages } from "../funcs/accountAccountV1SettingsUploadImages.js";
import { accountAccountV1SettingsVerfyEmail } from "../funcs/accountAccountV1SettingsVerfyEmail.js";
import { accountLeaderboardV1GetAccount } from "../funcs/accountLeaderboardV1GetAccount.js";
import { accountLeaderboardV1GetBadges } from "../funcs/accountLeaderboardV1GetBadges.js";
import { accountLeaderboardV1GetGroup } from "../funcs/accountLeaderboardV1GetGroup.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Account extends ClientSDK {
  async accountV1ConnectionConnect(
    request: components.V1ConnectRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ConnectionConnectResponse> {
    return unwrapAsync(accountAccountV1ConnectionConnect(
      this,
      request,
      options,
    ));
  }

  async accountV1SessionCreate(
    request: operations.AccountV1SessionCreateRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SessionCreateResponse> {
    return unwrapAsync(accountAccountV1SessionCreate(
      this,
      request,
      options,
    ));
  }

  async accountV1ConnectionDeleteConnection(
    request: components.V1DeleteConnectionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ConnectionDeleteConnectionResponse> {
    return unwrapAsync(accountAccountV1ConnectionDeleteConnection(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsDeleteImages(
    request: components.V1DeleteImagesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeleteImagesResponse> {
    return unwrapAsync(accountAccountV1SettingsDeleteImages(
      this,
      request,
      options,
    ));
  }

  async accountV1SessionDelete(
    request: components.V1DeleteSessionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SessionDeleteResponse> {
    return unwrapAsync(accountAccountV1SessionDelete(
      this,
      request,
      options,
    ));
  }

  async accountV1GetApps(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetAppsResponse> {
    return unwrapAsync(accountAccountV1GetApps(
      this,
      request,
      options,
    ));
  }

  async accountV1GetBadges(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetBadgesResponse> {
    return unwrapAsync(accountAccountV1GetBadges(
      this,
      request,
      options,
    ));
  }

  async accountV1GetDataPoints(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetDataPointsResponse> {
    return unwrapAsync(accountAccountV1GetDataPoints(
      this,
      request,
      options,
    ));
  }

  async accountV1GetFriends(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetFriendsResponse> {
    return unwrapAsync(accountAccountV1GetFriends(
      this,
      request,
      options,
    ));
  }

  async accountV1GetInfo(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetInfoResponse> {
    return unwrapAsync(accountAccountV1GetInfo(
      this,
      request,
      options,
    ));
  }

  async accountV1GetLeaderboardHistory(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetLeaderboardHistoryResponse> {
    return unwrapAsync(accountAccountV1GetLeaderboardHistory(
      this,
      request,
      options,
    ));
  }

  async accountV1SessionGet(
    options?: RequestOptions,
  ): Promise<operations.AccountV1SessionGetResponse> {
    return unwrapAsync(accountAccountV1SessionGet(
      this,
      options,
    ));
  }

  async accountV1SettingsGet(
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsGetResponse> {
    return unwrapAsync(accountAccountV1SettingsGet(
      this,
      options,
    ));
  }

  async accountV1GetStaff(
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetStaffResponse> {
    return unwrapAsync(accountAccountV1GetStaff(
      this,
      options,
    ));
  }

  async accountV1SessionLogin(
    request: operations.AccountV1SessionLoginRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SessionLoginResponse> {
    return unwrapAsync(accountAccountV1SessionLogin(
      this,
      request,
      options,
    ));
  }

  async accountV1Queue(
    request: components.V1AccountQueueRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1QueueResponse> {
    return unwrapAsync(accountAccountV1Queue(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsSendEmailVerification(
    request: operations.AccountV1SettingsSendEmailVerificationRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsSendEmailVerificationResponse> {
    return unwrapAsync(accountAccountV1SettingsSendEmailVerification(
      this,
      request,
      options,
    ));
  }

  async accountV1ConnectionUpdateConnection(
    request: components.V1UpdateConnectionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ConnectionUpdateConnectionResponse> {
    return unwrapAsync(accountAccountV1ConnectionUpdateConnection(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsUpdateImage(
    request: components.V1UpdateImageRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsUpdateImageResponse> {
    return unwrapAsync(accountAccountV1SettingsUpdateImage(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsUpdate(
    request: operations.AccountV1SettingsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsUpdateResponse> {
    return unwrapAsync(accountAccountV1SettingsUpdate(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsUploadImages(
    request: components.V1UploadImagesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsUploadImagesResponse> {
    return unwrapAsync(accountAccountV1SettingsUploadImages(
      this,
      request,
      options,
    ));
  }

  async accountV1ConnectionVerifyConnection(
    request: components.V1VerifyConnectionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ConnectionVerifyConnectionResponse> {
    return unwrapAsync(accountAccountV1ConnectionVerifyConnection(
      this,
      request,
      options,
    ));
  }

  async accountV1SettingsVerfyEmail(
    request: components.V1VerifyEmailRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsVerfyEmailResponse> {
    return unwrapAsync(accountAccountV1SettingsVerfyEmail(
      this,
      request,
      options,
    ));
  }

  async leaderboardV1GetAccount(
    request: components.V1AccountLeaderboardRequestBody,
    options?: RequestOptions,
  ): Promise<operations.LeaderboardV1GetAccountResponse> {
    return unwrapAsync(accountLeaderboardV1GetAccount(
      this,
      request,
      options,
    ));
  }

  async leaderboardV1GetBadges(
    options?: RequestOptions,
  ): Promise<operations.LeaderboardV1GetBadgesResponse> {
    return unwrapAsync(accountLeaderboardV1GetBadges(
      this,
      options,
    ));
  }

  async leaderboardV1GetGroup(
    request: components.V1GroupLeaderboardRequestBody,
    options?: RequestOptions,
  ): Promise<operations.LeaderboardV1GetGroupResponse> {
    return unwrapAsync(accountLeaderboardV1GetGroup(
      this,
      request,
      options,
    ));
  }
}
