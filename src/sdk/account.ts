/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountAccountV1GetMeta } from "../funcs/accountAccountV1GetMeta.js";
import { accountCreateDeveloperApp } from "../funcs/accountCreateDeveloperApp.js";
import { accountDeleteDeveloperApp } from "../funcs/accountDeleteDeveloperApp.js";
import { accountDeleteImages } from "../funcs/accountDeleteImages.js";
import { accountGetAccount } from "../funcs/accountGetAccount.js";
import { accountGetApps } from "../funcs/accountGetApps.js";
import { accountGetBadges } from "../funcs/accountGetBadges.js";
import { accountGetDataPoints } from "../funcs/accountGetDataPoints.js";
import { accountGetFriends } from "../funcs/accountGetFriends.js";
import { accountGetInfo } from "../funcs/accountGetInfo.js";
import { accountGetLeaderboardHistory } from "../funcs/accountGetLeaderboardHistory.js";
import { accountGetStaff } from "../funcs/accountGetStaff.js";
import { accountLeaderboardV1GetLeaderboardAccountMeta } from "../funcs/accountLeaderboardV1GetLeaderboardAccountMeta.js";
import { accountUpdateApp } from "../funcs/accountUpdateApp.js";
import { accountUploadImages } from "../funcs/accountUploadImages.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Account extends ClientSDK {
  async createDeveloperApp(
    request: components.V1DeveloperAppCreateRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppCreateResponse> {
    return unwrapAsync(accountCreateDeveloperApp(
      this,
      request,
      options,
    ));
  }

  async deleteDeveloperApp(
    request: components.V1AccountDeveloperAppDeleteRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppDeleteResponse> {
    return unwrapAsync(accountDeleteDeveloperApp(
      this,
      request,
      options,
    ));
  }

  async deleteImages(
    request: components.V1DeleteImagesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ImagesDeleteResponse> {
    return unwrapAsync(accountDeleteImages(
      this,
      request,
      options,
    ));
  }

  async updateApp(
    request: components.V1AccountDeveloperAppUpdateRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1SettingsDeveloperAppUpdateResponse> {
    return unwrapAsync(accountUpdateApp(
      this,
      request,
      options,
    ));
  }

  async getApps(
    request: components.V1AccountsAppsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetAppsResponse> {
    return unwrapAsync(accountGetApps(
      this,
      request,
      options,
    ));
  }

  async getBadges(
    request: components.V1BadgesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetBadgesResponse> {
    return unwrapAsync(accountGetBadges(
      this,
      request,
      options,
    ));
  }

  async getDataPoints(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetDataPointsResponse> {
    return unwrapAsync(accountGetDataPoints(
      this,
      request,
      options,
    ));
  }

  async getFriends(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetFriendsResponse> {
    return unwrapAsync(accountGetFriends(
      this,
      request,
      options,
    ));
  }

  async getInfo(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetInfoResponse> {
    return unwrapAsync(accountGetInfo(
      this,
      request,
      options,
    ));
  }

  async getLeaderboardHistory(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetLeaderboardHistoryResponse> {
    return unwrapAsync(accountGetLeaderboardHistory(
      this,
      request,
      options,
    ));
  }

  async accountV1GetMeta(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetMetaResponse> {
    return unwrapAsync(accountAccountV1GetMeta(
      this,
      request,
      options,
    ));
  }

  async getStaff(
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetStaffResponse> {
    return unwrapAsync(accountGetStaff(
      this,
      options,
    ));
  }

  async uploadImages(
    request: components.V1UploadImagesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1ImagesUploadResponse> {
    return unwrapAsync(accountUploadImages(
      this,
      request,
      options,
    ));
  }

  async getAccount(
    request: components.AccountSearch,
    options?: RequestOptions,
  ): Promise<operations.AdminV1GetAccountResponse> {
    return unwrapAsync(accountGetAccount(
      this,
      request,
      options,
    ));
  }

  async leaderboardV1GetLeaderboardAccountMeta(
    request: components.V1LeaderboardAccountMetaRequestBody,
    options?: RequestOptions,
  ): Promise<operations.LeaderboardV1GetLeaderboardAccountMetaResponse> {
    return unwrapAsync(accountLeaderboardV1GetLeaderboardAccountMeta(
      this,
      request,
      options,
    ));
  }
}
