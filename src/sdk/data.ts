/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataAccountV1GetApps } from "../funcs/dataAccountV1GetApps.js";
import { dataAccountV1GetBadges } from "../funcs/dataAccountV1GetBadges.js";
import { dataAccountV1GetDataPoints } from "../funcs/dataAccountV1GetDataPoints.js";
import { dataAccountV1GetFriends } from "../funcs/dataAccountV1GetFriends.js";
import { dataAccountV1GetInfo } from "../funcs/dataAccountV1GetInfo.js";
import { dataAccountV1GetLeaderboardHistory } from "../funcs/dataAccountV1GetLeaderboardHistory.js";
import { dataAccountV1GetStaff } from "../funcs/dataAccountV1GetStaff.js";
import { dataAccountV1Queue } from "../funcs/dataAccountV1Queue.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Data extends ClientSDK {
  /**
   * Get Account Apps
   */
  async accountV1GetApps(
    request: operations.AccountV1GetAppsRequest,
    security: operations.AccountV1GetAppsSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetAppsResponse> {
    return unwrapAsync(dataAccountV1GetApps(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Account Badges
   */
  async accountV1GetBadges(
    request: operations.AccountV1GetBadgesRequest,
    security: operations.AccountV1GetBadgesSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetBadgesResponse> {
    return unwrapAsync(dataAccountV1GetBadges(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Account DataPoints
   */
  async accountV1GetDataPoints(
    request: operations.AccountV1GetDataPointsRequest,
    security: operations.AccountV1GetDataPointsSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetDataPointsResponse> {
    return unwrapAsync(dataAccountV1GetDataPoints(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Account Friends
   */
  async accountV1GetFriends(
    request: operations.AccountV1GetFriendsRequest,
    security: operations.AccountV1GetFriendsSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetFriendsResponse> {
    return unwrapAsync(dataAccountV1GetFriends(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Account Info
   */
  async accountV1GetInfo(
    request: components.AccountSearch,
    security: operations.AccountV1GetInfoSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetInfoResponse> {
    return unwrapAsync(dataAccountV1GetInfo(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Account Leaderboard History
   */
  async accountV1GetLeaderboardHistory(
    request: operations.AccountV1GetLeaderboardHistoryRequest,
    security: operations.AccountV1GetLeaderboardHistorySecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetLeaderboardHistoryResponse> {
    return unwrapAsync(dataAccountV1GetLeaderboardHistory(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Get Staff Members and their info
   */
  async accountV1GetStaff(
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetStaffResponse> {
    return unwrapAsync(dataAccountV1GetStaff(
      this,
      options,
    ));
  }

  /**
   * Queue a app for processing
   */
  async accountV1Queue(
    request: operations.AccountV1QueueRequest,
    security: operations.AccountV1QueueSecurity,
    options?: RequestOptions,
  ): Promise<operations.AccountV1QueueResponse> {
    return unwrapAsync(dataAccountV1Queue(
      this,
      request,
      security,
      options,
    ));
  }
}
