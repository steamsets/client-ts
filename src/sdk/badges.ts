/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { badgesBookmark } from "../funcs/badgesBookmark.js";
import { badgesGetBookmarks } from "../funcs/badgesGetBookmarks.js";
import { badgesGetOwned } from "../funcs/badgesGetOwned.js";
import { badgesSearch } from "../funcs/badgesSearch.js";
import { badgesTag } from "../funcs/badgesTag.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Badges extends ClientSDK {
  async bookmark(
    request: components.V1AccountBadgeBookmarkRequestBody,
    options?: RequestOptions,
  ): Promise<operations.AccountV1BookmarkBadgeResponse> {
    return unwrapAsync(badgesBookmark(
      this,
      request,
      options,
    ));
  }

  async getBookmarks(
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetBadgeBookmarksResponse> {
    return unwrapAsync(badgesGetBookmarks(
      this,
      options,
    ));
  }

  async getOwned(
    options?: RequestOptions,
  ): Promise<operations.AccountV1GetOwnedBadgesResponse> {
    return unwrapAsync(badgesGetOwned(
      this,
      options,
    ));
  }

  async search(
    request: components.V1SearchRequest,
    options?: RequestOptions,
  ): Promise<operations.BadgeV1SearchResponse> {
    return unwrapAsync(badgesSearch(
      this,
      request,
      options,
    ));
  }

  async tag(
    request: components.V1BadgeTagRequestBody,
    options?: RequestOptions,
  ): Promise<operations.BadgeV1TagResponse> {
    return unwrapAsync(badgesTag(
      this,
      request,
      options,
    ));
  }
}
