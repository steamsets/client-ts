/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { badgeBadgeListAccounts } from "../funcs/badgeBadgeListAccounts.js";
import { badgeSearch } from "../funcs/badgeSearch.js";
import { badgeSuggestTags } from "../funcs/badgeSuggestTags.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Badge extends ClientSDK {
  /**
   * List accounts for badge
   */
  async badgeListAccounts(
    request: components.V1BadgeListAccountsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.BadgeListAccountsResponse> {
    return unwrapAsync(badgeBadgeListAccounts(
      this,
      request,
      options,
    ));
  }

  /**
   * Search badges
   */
  async search(
    request: operations.BadgeSearchBadgesRequest,
    options?: RequestOptions,
  ): Promise<operations.BadgeSearchBadgesResponse> {
    return unwrapAsync(badgeSearch(
      this,
      request,
      options,
    ));
  }

  /**
   * Suggest badge tag
   */
  async suggestTags(
    request: components.V1BadgeSuggestTagsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.BadgeSuggestTagsResponse> {
    return unwrapAsync(badgeSuggestTags(
      this,
      request,
      options,
    ));
  }
}
