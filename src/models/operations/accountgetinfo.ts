/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountGetInfoResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1AccountGetInfoResponseBody?:
    | components.V1AccountGetInfoResponseBody
    | undefined;
};

/** @internal */
export const AccountGetInfoResponse$inboundSchema: z.ZodType<
  AccountGetInfoResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1AccountGetInfoResponseBody: components
    .V1AccountGetInfoResponseBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1AccountGetInfoResponseBody": "v1AccountGetInfoResponseBody",
  });
});

/** @internal */
export type AccountGetInfoResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1AccountGetInfoResponseBody?:
    | components.V1AccountGetInfoResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AccountGetInfoResponse$outboundSchema: z.ZodType<
  AccountGetInfoResponse$Outbound,
  z.ZodTypeDef,
  AccountGetInfoResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1AccountGetInfoResponseBody: components
    .V1AccountGetInfoResponseBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1AccountGetInfoResponseBody: "V1AccountGetInfoResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountGetInfoResponse$ {
  /** @deprecated use `AccountGetInfoResponse$inboundSchema` instead. */
  export const inboundSchema = AccountGetInfoResponse$inboundSchema;
  /** @deprecated use `AccountGetInfoResponse$outboundSchema` instead. */
  export const outboundSchema = AccountGetInfoResponse$outboundSchema;
  /** @deprecated use `AccountGetInfoResponse$Outbound` instead. */
  export type Outbound = AccountGetInfoResponse$Outbound;
}

export function accountGetInfoResponseToJSON(
  accountGetInfoResponse: AccountGetInfoResponse,
): string {
  return JSON.stringify(
    AccountGetInfoResponse$outboundSchema.parse(accountGetInfoResponse),
  );
}

export function accountGetInfoResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountGetInfoResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountGetInfoResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountGetInfoResponse' from JSON`,
  );
}
