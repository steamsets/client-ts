/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountUpdateSettingsRequest = {
  xForwardedFor?: string | undefined;
  v1AccountUpdateSettingsRequestBody:
    components.V1AccountUpdateSettingsRequestBody;
};

export type AccountUpdateSettingsResponse = {
  httpMeta: components.HTTPMetadata;
};

/** @internal */
export const AccountUpdateSettingsRequest$inboundSchema: z.ZodType<
  AccountUpdateSettingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "X-Forwarded-For": z.string().optional(),
  V1AccountUpdateSettingsRequestBody:
    components.V1AccountUpdateSettingsRequestBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "X-Forwarded-For": "xForwardedFor",
    "V1AccountUpdateSettingsRequestBody": "v1AccountUpdateSettingsRequestBody",
  });
});

/** @internal */
export type AccountUpdateSettingsRequest$Outbound = {
  "X-Forwarded-For"?: string | undefined;
  V1AccountUpdateSettingsRequestBody:
    components.V1AccountUpdateSettingsRequestBody$Outbound;
};

/** @internal */
export const AccountUpdateSettingsRequest$outboundSchema: z.ZodType<
  AccountUpdateSettingsRequest$Outbound,
  z.ZodTypeDef,
  AccountUpdateSettingsRequest
> = z.object({
  xForwardedFor: z.string().optional(),
  v1AccountUpdateSettingsRequestBody:
    components.V1AccountUpdateSettingsRequestBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xForwardedFor: "X-Forwarded-For",
    v1AccountUpdateSettingsRequestBody: "V1AccountUpdateSettingsRequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountUpdateSettingsRequest$ {
  /** @deprecated use `AccountUpdateSettingsRequest$inboundSchema` instead. */
  export const inboundSchema = AccountUpdateSettingsRequest$inboundSchema;
  /** @deprecated use `AccountUpdateSettingsRequest$outboundSchema` instead. */
  export const outboundSchema = AccountUpdateSettingsRequest$outboundSchema;
  /** @deprecated use `AccountUpdateSettingsRequest$Outbound` instead. */
  export type Outbound = AccountUpdateSettingsRequest$Outbound;
}

export function accountUpdateSettingsRequestToJSON(
  accountUpdateSettingsRequest: AccountUpdateSettingsRequest,
): string {
  return JSON.stringify(
    AccountUpdateSettingsRequest$outboundSchema.parse(
      accountUpdateSettingsRequest,
    ),
  );
}

export function accountUpdateSettingsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AccountUpdateSettingsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountUpdateSettingsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountUpdateSettingsRequest' from JSON`,
  );
}

/** @internal */
export const AccountUpdateSettingsResponse$inboundSchema: z.ZodType<
  AccountUpdateSettingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
  });
});

/** @internal */
export type AccountUpdateSettingsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
};

/** @internal */
export const AccountUpdateSettingsResponse$outboundSchema: z.ZodType<
  AccountUpdateSettingsResponse$Outbound,
  z.ZodTypeDef,
  AccountUpdateSettingsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountUpdateSettingsResponse$ {
  /** @deprecated use `AccountUpdateSettingsResponse$inboundSchema` instead. */
  export const inboundSchema = AccountUpdateSettingsResponse$inboundSchema;
  /** @deprecated use `AccountUpdateSettingsResponse$outboundSchema` instead. */
  export const outboundSchema = AccountUpdateSettingsResponse$outboundSchema;
  /** @deprecated use `AccountUpdateSettingsResponse$Outbound` instead. */
  export type Outbound = AccountUpdateSettingsResponse$Outbound;
}

export function accountUpdateSettingsResponseToJSON(
  accountUpdateSettingsResponse: AccountUpdateSettingsResponse,
): string {
  return JSON.stringify(
    AccountUpdateSettingsResponse$outboundSchema.parse(
      accountUpdateSettingsResponse,
    ),
  );
}

export function accountUpdateSettingsResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountUpdateSettingsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountUpdateSettingsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountUpdateSettingsResponse' from JSON`,
  );
}
