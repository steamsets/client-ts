/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type LocationV1LocationGetResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  regions?: Array<components.Region> | null | undefined;
};

/** @internal */
export const LocationV1LocationGetResponse$inboundSchema: z.ZodType<
  LocationV1LocationGetResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Regions: z.nullable(z.array(components.Region$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Regions": "regions",
  });
});

/** @internal */
export type LocationV1LocationGetResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Regions?: Array<components.Region$Outbound> | null | undefined;
};

/** @internal */
export const LocationV1LocationGetResponse$outboundSchema: z.ZodType<
  LocationV1LocationGetResponse$Outbound,
  z.ZodTypeDef,
  LocationV1LocationGetResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  regions: z.nullable(z.array(components.Region$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    regions: "Regions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LocationV1LocationGetResponse$ {
  /** @deprecated use `LocationV1LocationGetResponse$inboundSchema` instead. */
  export const inboundSchema = LocationV1LocationGetResponse$inboundSchema;
  /** @deprecated use `LocationV1LocationGetResponse$outboundSchema` instead. */
  export const outboundSchema = LocationV1LocationGetResponse$outboundSchema;
  /** @deprecated use `LocationV1LocationGetResponse$Outbound` instead. */
  export type Outbound = LocationV1LocationGetResponse$Outbound;
}
