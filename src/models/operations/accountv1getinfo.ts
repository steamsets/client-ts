/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountV1GetInfoSecurity = {
  apiKey: string;
  session: string;
};

export type AccountV1GetInfoResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  accountInfoBody?: components.AccountInfoBody | undefined;
};

/** @internal */
export const AccountV1GetInfoSecurity$inboundSchema: z.ZodType<
  AccountV1GetInfoSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string(),
  session: z.string(),
});

/** @internal */
export type AccountV1GetInfoSecurity$Outbound = {
  apiKey: string;
  session: string;
};

/** @internal */
export const AccountV1GetInfoSecurity$outboundSchema: z.ZodType<
  AccountV1GetInfoSecurity$Outbound,
  z.ZodTypeDef,
  AccountV1GetInfoSecurity
> = z.object({
  apiKey: z.string(),
  session: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1GetInfoSecurity$ {
  /** @deprecated use `AccountV1GetInfoSecurity$inboundSchema` instead. */
  export const inboundSchema = AccountV1GetInfoSecurity$inboundSchema;
  /** @deprecated use `AccountV1GetInfoSecurity$outboundSchema` instead. */
  export const outboundSchema = AccountV1GetInfoSecurity$outboundSchema;
  /** @deprecated use `AccountV1GetInfoSecurity$Outbound` instead. */
  export type Outbound = AccountV1GetInfoSecurity$Outbound;
}

/** @internal */
export const AccountV1GetInfoResponse$inboundSchema: z.ZodType<
  AccountV1GetInfoResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  AccountInfoBody: components.AccountInfoBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "AccountInfoBody": "accountInfoBody",
  });
});

/** @internal */
export type AccountV1GetInfoResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  AccountInfoBody?: components.AccountInfoBody$Outbound | undefined;
};

/** @internal */
export const AccountV1GetInfoResponse$outboundSchema: z.ZodType<
  AccountV1GetInfoResponse$Outbound,
  z.ZodTypeDef,
  AccountV1GetInfoResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  accountInfoBody: components.AccountInfoBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    accountInfoBody: "AccountInfoBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1GetInfoResponse$ {
  /** @deprecated use `AccountV1GetInfoResponse$inboundSchema` instead. */
  export const inboundSchema = AccountV1GetInfoResponse$inboundSchema;
  /** @deprecated use `AccountV1GetInfoResponse$outboundSchema` instead. */
  export const outboundSchema = AccountV1GetInfoResponse$outboundSchema;
  /** @deprecated use `AccountV1GetInfoResponse$Outbound` instead. */
  export type Outbound = AccountV1GetInfoResponse$Outbound;
}
