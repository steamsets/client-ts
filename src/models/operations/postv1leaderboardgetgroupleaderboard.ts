/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV1LeaderboardGetGroupLeaderboardResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1LeaderboardGetGroupLeaderboardResponseBody?:
    | components.V1LeaderboardGetGroupLeaderboardResponseBody
    | undefined;
};

/** @internal */
export const PostV1LeaderboardGetGroupLeaderboardResponse$inboundSchema:
  z.ZodType<
    PostV1LeaderboardGetGroupLeaderboardResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    V1LeaderboardGetGroupLeaderboardResponseBody: components
      .V1LeaderboardGetGroupLeaderboardResponseBody$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "V1LeaderboardGetGroupLeaderboardResponseBody":
        "v1LeaderboardGetGroupLeaderboardResponseBody",
    });
  });

/** @internal */
export type PostV1LeaderboardGetGroupLeaderboardResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1LeaderboardGetGroupLeaderboardResponseBody?:
    | components.V1LeaderboardGetGroupLeaderboardResponseBody$Outbound
    | undefined;
};

/** @internal */
export const PostV1LeaderboardGetGroupLeaderboardResponse$outboundSchema:
  z.ZodType<
    PostV1LeaderboardGetGroupLeaderboardResponse$Outbound,
    z.ZodTypeDef,
    PostV1LeaderboardGetGroupLeaderboardResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    v1LeaderboardGetGroupLeaderboardResponseBody: components
      .V1LeaderboardGetGroupLeaderboardResponseBody$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      v1LeaderboardGetGroupLeaderboardResponseBody:
        "V1LeaderboardGetGroupLeaderboardResponseBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1LeaderboardGetGroupLeaderboardResponse$ {
  /** @deprecated use `PostV1LeaderboardGetGroupLeaderboardResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostV1LeaderboardGetGroupLeaderboardResponse$inboundSchema;
  /** @deprecated use `PostV1LeaderboardGetGroupLeaderboardResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostV1LeaderboardGetGroupLeaderboardResponse$outboundSchema;
  /** @deprecated use `PostV1LeaderboardGetGroupLeaderboardResponse$Outbound` instead. */
  export type Outbound = PostV1LeaderboardGetGroupLeaderboardResponse$Outbound;
}

export function postV1LeaderboardGetGroupLeaderboardResponseToJSON(
  postV1LeaderboardGetGroupLeaderboardResponse:
    PostV1LeaderboardGetGroupLeaderboardResponse,
): string {
  return JSON.stringify(
    PostV1LeaderboardGetGroupLeaderboardResponse$outboundSchema.parse(
      postV1LeaderboardGetGroupLeaderboardResponse,
    ),
  );
}

export function postV1LeaderboardGetGroupLeaderboardResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV1LeaderboardGetGroupLeaderboardResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV1LeaderboardGetGroupLeaderboardResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV1LeaderboardGetGroupLeaderboardResponse' from JSON`,
  );
}
