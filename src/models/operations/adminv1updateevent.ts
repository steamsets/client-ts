/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AdminV1UpdateEventResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1AdminUpdateEventResponseBody?:
    | components.V1AdminUpdateEventResponseBody
    | undefined;
};

/** @internal */
export const AdminV1UpdateEventResponse$inboundSchema: z.ZodType<
  AdminV1UpdateEventResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1AdminUpdateEventResponseBody: components
    .V1AdminUpdateEventResponseBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1AdminUpdateEventResponseBody": "v1AdminUpdateEventResponseBody",
  });
});

/** @internal */
export type AdminV1UpdateEventResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1AdminUpdateEventResponseBody?:
    | components.V1AdminUpdateEventResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AdminV1UpdateEventResponse$outboundSchema: z.ZodType<
  AdminV1UpdateEventResponse$Outbound,
  z.ZodTypeDef,
  AdminV1UpdateEventResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1AdminUpdateEventResponseBody: components
    .V1AdminUpdateEventResponseBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1AdminUpdateEventResponseBody: "V1AdminUpdateEventResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AdminV1UpdateEventResponse$ {
  /** @deprecated use `AdminV1UpdateEventResponse$inboundSchema` instead. */
  export const inboundSchema = AdminV1UpdateEventResponse$inboundSchema;
  /** @deprecated use `AdminV1UpdateEventResponse$outboundSchema` instead. */
  export const outboundSchema = AdminV1UpdateEventResponse$outboundSchema;
  /** @deprecated use `AdminV1UpdateEventResponse$Outbound` instead. */
  export type Outbound = AdminV1UpdateEventResponse$Outbound;
}

export function adminV1UpdateEventResponseToJSON(
  adminV1UpdateEventResponse: AdminV1UpdateEventResponse,
): string {
  return JSON.stringify(
    AdminV1UpdateEventResponse$outboundSchema.parse(adminV1UpdateEventResponse),
  );
}

export function adminV1UpdateEventResponseFromJSON(
  jsonString: string,
): SafeParseResult<AdminV1UpdateEventResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AdminV1UpdateEventResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AdminV1UpdateEventResponse' from JSON`,
  );
}
