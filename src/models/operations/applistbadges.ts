/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppListBadgesResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1AppListBadgesResponseBody?:
    | components.V1AppListBadgesResponseBody
    | undefined;
};

/** @internal */
export const AppListBadgesResponse$inboundSchema: z.ZodType<
  AppListBadgesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1AppListBadgesResponseBody: components
    .V1AppListBadgesResponseBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1AppListBadgesResponseBody": "v1AppListBadgesResponseBody",
  });
});

/** @internal */
export type AppListBadgesResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1AppListBadgesResponseBody?:
    | components.V1AppListBadgesResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AppListBadgesResponse$outboundSchema: z.ZodType<
  AppListBadgesResponse$Outbound,
  z.ZodTypeDef,
  AppListBadgesResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1AppListBadgesResponseBody: components
    .V1AppListBadgesResponseBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1AppListBadgesResponseBody: "V1AppListBadgesResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppListBadgesResponse$ {
  /** @deprecated use `AppListBadgesResponse$inboundSchema` instead. */
  export const inboundSchema = AppListBadgesResponse$inboundSchema;
  /** @deprecated use `AppListBadgesResponse$outboundSchema` instead. */
  export const outboundSchema = AppListBadgesResponse$outboundSchema;
  /** @deprecated use `AppListBadgesResponse$Outbound` instead. */
  export type Outbound = AppListBadgesResponse$Outbound;
}

export function appListBadgesResponseToJSON(
  appListBadgesResponse: AppListBadgesResponse,
): string {
  return JSON.stringify(
    AppListBadgesResponse$outboundSchema.parse(appListBadgesResponse),
  );
}

export function appListBadgesResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppListBadgesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppListBadgesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppListBadgesResponse' from JSON`,
  );
}
