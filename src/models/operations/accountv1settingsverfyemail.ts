/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountV1SettingsVerfyEmailResponse = {
  httpMeta: components.HTTPMetadata;
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const AccountV1SettingsVerfyEmailResponse$inboundSchema: z.ZodType<
  AccountV1SettingsVerfyEmailResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Headers": "headers",
  });
});

/** @internal */
export type AccountV1SettingsVerfyEmailResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const AccountV1SettingsVerfyEmailResponse$outboundSchema: z.ZodType<
  AccountV1SettingsVerfyEmailResponse$Outbound,
  z.ZodTypeDef,
  AccountV1SettingsVerfyEmailResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1SettingsVerfyEmailResponse$ {
  /** @deprecated use `AccountV1SettingsVerfyEmailResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountV1SettingsVerfyEmailResponse$inboundSchema;
  /** @deprecated use `AccountV1SettingsVerfyEmailResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountV1SettingsVerfyEmailResponse$outboundSchema;
  /** @deprecated use `AccountV1SettingsVerfyEmailResponse$Outbound` instead. */
  export type Outbound = AccountV1SettingsVerfyEmailResponse$Outbound;
}

export function accountV1SettingsVerfyEmailResponseToJSON(
  accountV1SettingsVerfyEmailResponse: AccountV1SettingsVerfyEmailResponse,
): string {
  return JSON.stringify(
    AccountV1SettingsVerfyEmailResponse$outboundSchema.parse(
      accountV1SettingsVerfyEmailResponse,
    ),
  );
}

export function accountV1SettingsVerfyEmailResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountV1SettingsVerfyEmailResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AccountV1SettingsVerfyEmailResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountV1SettingsVerfyEmailResponse' from JSON`,
  );
}
