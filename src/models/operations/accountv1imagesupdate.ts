/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountV1ImagesUpdateResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1UpdateImageResponseBody?: components.V1UpdateImageResponseBody | undefined;
};

/** @internal */
export const AccountV1ImagesUpdateResponse$inboundSchema: z.ZodType<
  AccountV1ImagesUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1UpdateImageResponseBody: components.V1UpdateImageResponseBody$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1UpdateImageResponseBody": "v1UpdateImageResponseBody",
  });
});

/** @internal */
export type AccountV1ImagesUpdateResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1UpdateImageResponseBody?:
    | components.V1UpdateImageResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AccountV1ImagesUpdateResponse$outboundSchema: z.ZodType<
  AccountV1ImagesUpdateResponse$Outbound,
  z.ZodTypeDef,
  AccountV1ImagesUpdateResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1UpdateImageResponseBody: components.V1UpdateImageResponseBody$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1UpdateImageResponseBody: "V1UpdateImageResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1ImagesUpdateResponse$ {
  /** @deprecated use `AccountV1ImagesUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = AccountV1ImagesUpdateResponse$inboundSchema;
  /** @deprecated use `AccountV1ImagesUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = AccountV1ImagesUpdateResponse$outboundSchema;
  /** @deprecated use `AccountV1ImagesUpdateResponse$Outbound` instead. */
  export type Outbound = AccountV1ImagesUpdateResponse$Outbound;
}

export function accountV1ImagesUpdateResponseToJSON(
  accountV1ImagesUpdateResponse: AccountV1ImagesUpdateResponse,
): string {
  return JSON.stringify(
    AccountV1ImagesUpdateResponse$outboundSchema.parse(
      accountV1ImagesUpdateResponse,
    ),
  );
}

export function accountV1ImagesUpdateResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountV1ImagesUpdateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountV1ImagesUpdateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountV1ImagesUpdateResponse' from JSON`,
  );
}
