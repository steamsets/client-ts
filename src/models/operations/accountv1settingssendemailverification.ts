/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type AccountV1SettingsSendEmailVerificationRequest = {
    xForwardedFor?: string | undefined;
};

/** @internal */
export const AccountV1SettingsSendEmailVerificationRequest$inboundSchema: z.ZodType<
    AccountV1SettingsSendEmailVerificationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Forwarded-For": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "X-Forwarded-For": "xForwardedFor",
        });
    });

/** @internal */
export type AccountV1SettingsSendEmailVerificationRequest$Outbound = {
    "X-Forwarded-For"?: string | undefined;
};

/** @internal */
export const AccountV1SettingsSendEmailVerificationRequest$outboundSchema: z.ZodType<
    AccountV1SettingsSendEmailVerificationRequest$Outbound,
    z.ZodTypeDef,
    AccountV1SettingsSendEmailVerificationRequest
> = z
    .object({
        xForwardedFor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xForwardedFor: "X-Forwarded-For",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1SettingsSendEmailVerificationRequest$ {
    /** @deprecated use `AccountV1SettingsSendEmailVerificationRequest$inboundSchema` instead. */
    export const inboundSchema = AccountV1SettingsSendEmailVerificationRequest$inboundSchema;
    /** @deprecated use `AccountV1SettingsSendEmailVerificationRequest$outboundSchema` instead. */
    export const outboundSchema = AccountV1SettingsSendEmailVerificationRequest$outboundSchema;
    /** @deprecated use `AccountV1SettingsSendEmailVerificationRequest$Outbound` instead. */
    export type Outbound = AccountV1SettingsSendEmailVerificationRequest$Outbound;
}
