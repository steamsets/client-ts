/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV1AccountUpdateVanityResponse = {
  httpMeta: components.HTTPMetadata;
};

/** @internal */
export const PostV1AccountUpdateVanityResponse$inboundSchema: z.ZodType<
  PostV1AccountUpdateVanityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
  });
});

/** @internal */
export type PostV1AccountUpdateVanityResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
};

/** @internal */
export const PostV1AccountUpdateVanityResponse$outboundSchema: z.ZodType<
  PostV1AccountUpdateVanityResponse$Outbound,
  z.ZodTypeDef,
  PostV1AccountUpdateVanityResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV1AccountUpdateVanityResponse$ {
  /** @deprecated use `PostV1AccountUpdateVanityResponse$inboundSchema` instead. */
  export const inboundSchema = PostV1AccountUpdateVanityResponse$inboundSchema;
  /** @deprecated use `PostV1AccountUpdateVanityResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostV1AccountUpdateVanityResponse$outboundSchema;
  /** @deprecated use `PostV1AccountUpdateVanityResponse$Outbound` instead. */
  export type Outbound = PostV1AccountUpdateVanityResponse$Outbound;
}

export function postV1AccountUpdateVanityResponseToJSON(
  postV1AccountUpdateVanityResponse: PostV1AccountUpdateVanityResponse,
): string {
  return JSON.stringify(
    PostV1AccountUpdateVanityResponse$outboundSchema.parse(
      postV1AccountUpdateVanityResponse,
    ),
  );
}

export function postV1AccountUpdateVanityResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostV1AccountUpdateVanityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV1AccountUpdateVanityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV1AccountUpdateVanityResponse' from JSON`,
  );
}
