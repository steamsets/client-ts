/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AccountV1GetAppsRequest = {
    xForwardedFor?: string | undefined;
    userAgent?: string | undefined;
    accountSearch: components.AccountSearch;
};

export type AccountV1GetAppsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    v1AccountsAppsResponseBody?: components.V1AccountsAppsResponseBody | undefined;
};

/** @internal */
export const AccountV1GetAppsRequest$inboundSchema: z.ZodType<
    AccountV1GetAppsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Forwarded-For": z.string().optional(),
        "User-Agent": z.string().optional(),
        AccountSearch: components.AccountSearch$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "X-Forwarded-For": "xForwardedFor",
            "User-Agent": "userAgent",
            AccountSearch: "accountSearch",
        });
    });

/** @internal */
export type AccountV1GetAppsRequest$Outbound = {
    "X-Forwarded-For"?: string | undefined;
    "User-Agent"?: string | undefined;
    AccountSearch: components.AccountSearch$Outbound;
};

/** @internal */
export const AccountV1GetAppsRequest$outboundSchema: z.ZodType<
    AccountV1GetAppsRequest$Outbound,
    z.ZodTypeDef,
    AccountV1GetAppsRequest
> = z
    .object({
        xForwardedFor: z.string().optional(),
        userAgent: z.string().optional(),
        accountSearch: components.AccountSearch$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xForwardedFor: "X-Forwarded-For",
            userAgent: "User-Agent",
            accountSearch: "AccountSearch",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1GetAppsRequest$ {
    /** @deprecated use `AccountV1GetAppsRequest$inboundSchema` instead. */
    export const inboundSchema = AccountV1GetAppsRequest$inboundSchema;
    /** @deprecated use `AccountV1GetAppsRequest$outboundSchema` instead. */
    export const outboundSchema = AccountV1GetAppsRequest$outboundSchema;
    /** @deprecated use `AccountV1GetAppsRequest$Outbound` instead. */
    export type Outbound = AccountV1GetAppsRequest$Outbound;
}

/** @internal */
export const AccountV1GetAppsResponse$inboundSchema: z.ZodType<
    AccountV1GetAppsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        V1AccountsAppsResponseBody: components.V1AccountsAppsResponseBody$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            V1AccountsAppsResponseBody: "v1AccountsAppsResponseBody",
        });
    });

/** @internal */
export type AccountV1GetAppsResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    V1AccountsAppsResponseBody?: components.V1AccountsAppsResponseBody$Outbound | undefined;
};

/** @internal */
export const AccountV1GetAppsResponse$outboundSchema: z.ZodType<
    AccountV1GetAppsResponse$Outbound,
    z.ZodTypeDef,
    AccountV1GetAppsResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        v1AccountsAppsResponseBody: components.V1AccountsAppsResponseBody$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            v1AccountsAppsResponseBody: "V1AccountsAppsResponseBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1GetAppsResponse$ {
    /** @deprecated use `AccountV1GetAppsResponse$inboundSchema` instead. */
    export const inboundSchema = AccountV1GetAppsResponse$inboundSchema;
    /** @deprecated use `AccountV1GetAppsResponse$outboundSchema` instead. */
    export const outboundSchema = AccountV1GetAppsResponse$outboundSchema;
    /** @deprecated use `AccountV1GetAppsResponse$Outbound` instead. */
    export type Outbound = AccountV1GetAppsResponse$Outbound;
}
