/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LeaderboardGetLowestRanksResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  object?: { [k: string]: number } | undefined;
};

/** @internal */
export const LeaderboardGetLowestRanksResponse$inboundSchema: z.ZodType<
  LeaderboardGetLowestRanksResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  object: z.record(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
  });
});

/** @internal */
export type LeaderboardGetLowestRanksResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  object?: { [k: string]: number } | undefined;
};

/** @internal */
export const LeaderboardGetLowestRanksResponse$outboundSchema: z.ZodType<
  LeaderboardGetLowestRanksResponse$Outbound,
  z.ZodTypeDef,
  LeaderboardGetLowestRanksResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  object: z.record(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeaderboardGetLowestRanksResponse$ {
  /** @deprecated use `LeaderboardGetLowestRanksResponse$inboundSchema` instead. */
  export const inboundSchema = LeaderboardGetLowestRanksResponse$inboundSchema;
  /** @deprecated use `LeaderboardGetLowestRanksResponse$outboundSchema` instead. */
  export const outboundSchema =
    LeaderboardGetLowestRanksResponse$outboundSchema;
  /** @deprecated use `LeaderboardGetLowestRanksResponse$Outbound` instead. */
  export type Outbound = LeaderboardGetLowestRanksResponse$Outbound;
}

export function leaderboardGetLowestRanksResponseToJSON(
  leaderboardGetLowestRanksResponse: LeaderboardGetLowestRanksResponse,
): string {
  return JSON.stringify(
    LeaderboardGetLowestRanksResponse$outboundSchema.parse(
      leaderboardGetLowestRanksResponse,
    ),
  );
}

export function leaderboardGetLowestRanksResponseFromJSON(
  jsonString: string,
): SafeParseResult<LeaderboardGetLowestRanksResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LeaderboardGetLowestRanksResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LeaderboardGetLowestRanksResponse' from JSON`,
  );
}
