/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AccountV1SessionLoginRequest = {
    userAgent?: string | undefined;
    xForwardedFor?: string | undefined;
    loginRequestBody: components.LoginRequestBody;
};

/** @internal */
export const AccountV1SessionLoginRequest$inboundSchema: z.ZodType<
    AccountV1SessionLoginRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "User-Agent": z.string().optional(),
        "X-Forwarded-For": z.string().optional(),
        LoginRequestBody: components.LoginRequestBody$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "User-Agent": "userAgent",
            "X-Forwarded-For": "xForwardedFor",
            LoginRequestBody: "loginRequestBody",
        });
    });

/** @internal */
export type AccountV1SessionLoginRequest$Outbound = {
    "User-Agent"?: string | undefined;
    "X-Forwarded-For"?: string | undefined;
    LoginRequestBody: components.LoginRequestBody$Outbound;
};

/** @internal */
export const AccountV1SessionLoginRequest$outboundSchema: z.ZodType<
    AccountV1SessionLoginRequest$Outbound,
    z.ZodTypeDef,
    AccountV1SessionLoginRequest
> = z
    .object({
        userAgent: z.string().optional(),
        xForwardedFor: z.string().optional(),
        loginRequestBody: components.LoginRequestBody$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            userAgent: "User-Agent",
            xForwardedFor: "X-Forwarded-For",
            loginRequestBody: "LoginRequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1SessionLoginRequest$ {
    /** @deprecated use `AccountV1SessionLoginRequest$inboundSchema` instead. */
    export const inboundSchema = AccountV1SessionLoginRequest$inboundSchema;
    /** @deprecated use `AccountV1SessionLoginRequest$outboundSchema` instead. */
    export const outboundSchema = AccountV1SessionLoginRequest$outboundSchema;
    /** @deprecated use `AccountV1SessionLoginRequest$Outbound` instead. */
    export type Outbound = AccountV1SessionLoginRequest$Outbound;
}
