/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BadgeV1TagsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1BadgeTagsResponseBody?: components.V1BadgeTagsResponseBody | undefined;
};

/** @internal */
export const BadgeV1TagsResponse$inboundSchema: z.ZodType<
  BadgeV1TagsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1BadgeTagsResponseBody: components.V1BadgeTagsResponseBody$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1BadgeTagsResponseBody": "v1BadgeTagsResponseBody",
  });
});

/** @internal */
export type BadgeV1TagsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1BadgeTagsResponseBody?:
    | components.V1BadgeTagsResponseBody$Outbound
    | undefined;
};

/** @internal */
export const BadgeV1TagsResponse$outboundSchema: z.ZodType<
  BadgeV1TagsResponse$Outbound,
  z.ZodTypeDef,
  BadgeV1TagsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1BadgeTagsResponseBody: components.V1BadgeTagsResponseBody$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1BadgeTagsResponseBody: "V1BadgeTagsResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadgeV1TagsResponse$ {
  /** @deprecated use `BadgeV1TagsResponse$inboundSchema` instead. */
  export const inboundSchema = BadgeV1TagsResponse$inboundSchema;
  /** @deprecated use `BadgeV1TagsResponse$outboundSchema` instead. */
  export const outboundSchema = BadgeV1TagsResponse$outboundSchema;
  /** @deprecated use `BadgeV1TagsResponse$Outbound` instead. */
  export type Outbound = BadgeV1TagsResponse$Outbound;
}

export function badgeV1TagsResponseToJSON(
  badgeV1TagsResponse: BadgeV1TagsResponse,
): string {
  return JSON.stringify(
    BadgeV1TagsResponse$outboundSchema.parse(badgeV1TagsResponse),
  );
}

export function badgeV1TagsResponseFromJSON(
  jsonString: string,
): SafeParseResult<BadgeV1TagsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BadgeV1TagsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BadgeV1TagsResponse' from JSON`,
  );
}
