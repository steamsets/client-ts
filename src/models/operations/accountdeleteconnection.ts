/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountDeleteConnectionResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1AccountDeleteConnectionResponseBody?:
    | components.V1AccountDeleteConnectionResponseBody
    | undefined;
};

/** @internal */
export const AccountDeleteConnectionResponse$inboundSchema: z.ZodType<
  AccountDeleteConnectionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1AccountDeleteConnectionResponseBody: components
    .V1AccountDeleteConnectionResponseBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1AccountDeleteConnectionResponseBody":
      "v1AccountDeleteConnectionResponseBody",
  });
});

/** @internal */
export type AccountDeleteConnectionResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1AccountDeleteConnectionResponseBody?:
    | components.V1AccountDeleteConnectionResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AccountDeleteConnectionResponse$outboundSchema: z.ZodType<
  AccountDeleteConnectionResponse$Outbound,
  z.ZodTypeDef,
  AccountDeleteConnectionResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1AccountDeleteConnectionResponseBody: components
    .V1AccountDeleteConnectionResponseBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1AccountDeleteConnectionResponseBody:
      "V1AccountDeleteConnectionResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountDeleteConnectionResponse$ {
  /** @deprecated use `AccountDeleteConnectionResponse$inboundSchema` instead. */
  export const inboundSchema = AccountDeleteConnectionResponse$inboundSchema;
  /** @deprecated use `AccountDeleteConnectionResponse$outboundSchema` instead. */
  export const outboundSchema = AccountDeleteConnectionResponse$outboundSchema;
  /** @deprecated use `AccountDeleteConnectionResponse$Outbound` instead. */
  export type Outbound = AccountDeleteConnectionResponse$Outbound;
}

export function accountDeleteConnectionResponseToJSON(
  accountDeleteConnectionResponse: AccountDeleteConnectionResponse,
): string {
  return JSON.stringify(
    AccountDeleteConnectionResponse$outboundSchema.parse(
      accountDeleteConnectionResponse,
    ),
  );
}

export function accountDeleteConnectionResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountDeleteConnectionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountDeleteConnectionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountDeleteConnectionResponse' from JSON`,
  );
}
