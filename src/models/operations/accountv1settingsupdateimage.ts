/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountV1SettingsUpdateImageResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  v1UpdateImageResponseBody?: components.V1UpdateImageResponseBody | undefined;
};

/** @internal */
export const AccountV1SettingsUpdateImageResponse$inboundSchema: z.ZodType<
  AccountV1SettingsUpdateImageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V1UpdateImageResponseBody: components.V1UpdateImageResponseBody$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V1UpdateImageResponseBody": "v1UpdateImageResponseBody",
  });
});

/** @internal */
export type AccountV1SettingsUpdateImageResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V1UpdateImageResponseBody?:
    | components.V1UpdateImageResponseBody$Outbound
    | undefined;
};

/** @internal */
export const AccountV1SettingsUpdateImageResponse$outboundSchema: z.ZodType<
  AccountV1SettingsUpdateImageResponse$Outbound,
  z.ZodTypeDef,
  AccountV1SettingsUpdateImageResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v1UpdateImageResponseBody: components.V1UpdateImageResponseBody$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v1UpdateImageResponseBody: "V1UpdateImageResponseBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountV1SettingsUpdateImageResponse$ {
  /** @deprecated use `AccountV1SettingsUpdateImageResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountV1SettingsUpdateImageResponse$inboundSchema;
  /** @deprecated use `AccountV1SettingsUpdateImageResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountV1SettingsUpdateImageResponse$outboundSchema;
  /** @deprecated use `AccountV1SettingsUpdateImageResponse$Outbound` instead. */
  export type Outbound = AccountV1SettingsUpdateImageResponse$Outbound;
}

export function accountV1SettingsUpdateImageResponseToJSON(
  accountV1SettingsUpdateImageResponse: AccountV1SettingsUpdateImageResponse,
): string {
  return JSON.stringify(
    AccountV1SettingsUpdateImageResponse$outboundSchema.parse(
      accountV1SettingsUpdateImageResponse,
    ),
  );
}

export function accountV1SettingsUpdateImageResponseFromJSON(
  jsonString: string,
): SafeParseResult<AccountV1SettingsUpdateImageResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AccountV1SettingsUpdateImageResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountV1SettingsUpdateImageResponse' from JSON`,
  );
}
