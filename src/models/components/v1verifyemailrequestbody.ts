/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1VerifyEmailRequestBody = {
  /**
   * The code to verify
   */
  code: string;
};

/** @internal */
export const V1VerifyEmailRequestBody$inboundSchema: z.ZodType<
  V1VerifyEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
});

/** @internal */
export type V1VerifyEmailRequestBody$Outbound = {
  code: string;
};

/** @internal */
export const V1VerifyEmailRequestBody$outboundSchema: z.ZodType<
  V1VerifyEmailRequestBody$Outbound,
  z.ZodTypeDef,
  V1VerifyEmailRequestBody
> = z.object({
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1VerifyEmailRequestBody$ {
  /** @deprecated use `V1VerifyEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1VerifyEmailRequestBody$inboundSchema;
  /** @deprecated use `V1VerifyEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema = V1VerifyEmailRequestBody$outboundSchema;
  /** @deprecated use `V1VerifyEmailRequestBody$Outbound` instead. */
  export type Outbound = V1VerifyEmailRequestBody$Outbound;
}

export function v1VerifyEmailRequestBodyToJSON(
  v1VerifyEmailRequestBody: V1VerifyEmailRequestBody,
): string {
  return JSON.stringify(
    V1VerifyEmailRequestBody$outboundSchema.parse(v1VerifyEmailRequestBody),
  );
}

export function v1VerifyEmailRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1VerifyEmailRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1VerifyEmailRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1VerifyEmailRequestBody' from JSON`,
  );
}
