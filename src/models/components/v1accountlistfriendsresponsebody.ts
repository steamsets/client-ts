/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V1AccountFriend,
  V1AccountFriend$inboundSchema,
  V1AccountFriend$Outbound,
  V1AccountFriend$outboundSchema,
} from "./v1accountfriend.js";

export type V1AccountListFriendsResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  friends: Array<V1AccountFriend | null> | null;
};

/** @internal */
export const V1AccountListFriendsResponseBody$inboundSchema: z.ZodType<
  V1AccountListFriendsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  friends: z.nullable(z.array(z.nullable(V1AccountFriend$inboundSchema))),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1AccountListFriendsResponseBody$Outbound = {
  $schema?: string | undefined;
  friends: Array<V1AccountFriend$Outbound | null> | null;
};

/** @internal */
export const V1AccountListFriendsResponseBody$outboundSchema: z.ZodType<
  V1AccountListFriendsResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountListFriendsResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  friends: z.nullable(z.array(z.nullable(V1AccountFriend$outboundSchema))),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountListFriendsResponseBody$ {
  /** @deprecated use `V1AccountListFriendsResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountListFriendsResponseBody$inboundSchema;
  /** @deprecated use `V1AccountListFriendsResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountListFriendsResponseBody$outboundSchema;
  /** @deprecated use `V1AccountListFriendsResponseBody$Outbound` instead. */
  export type Outbound = V1AccountListFriendsResponseBody$Outbound;
}

export function v1AccountListFriendsResponseBodyToJSON(
  v1AccountListFriendsResponseBody: V1AccountListFriendsResponseBody,
): string {
  return JSON.stringify(
    V1AccountListFriendsResponseBody$outboundSchema.parse(
      v1AccountListFriendsResponseBody,
    ),
  );
}

export function v1AccountListFriendsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountListFriendsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountListFriendsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountListFriendsResponseBody' from JSON`,
  );
}
