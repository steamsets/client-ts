/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IDStruct,
  IDStruct$inboundSchema,
  IDStruct$Outbound,
  IDStruct$outboundSchema,
} from "./idstruct.js";
import {
  VanityStruct,
  VanityStruct$inboundSchema,
  VanityStruct$Outbound,
  VanityStruct$outboundSchema,
} from "./vanitystruct.js";

/**
 * The leaderboard to get
 */
export const V1LeaderboardPreviewAccountRankRequestBodyLeaderboard = {
  Apps: "apps",
  AwardsGiven: "awards_given",
  AwardsReceived: "awards_received",
  Bans: "bans",
  GameBans: "game_bans",
  VacBans: "vac_bans",
  Donations: "donations",
  FoilBadges: "foil_badges",
  NormalBadges: "normal_badges",
  Badges: "badges",
  Playtime: "playtime",
  PointsGiven: "points_given",
  PointsReceived: "points_received",
  SteamSets: "steam_sets",
  Xp: "xp",
} as const;
/**
 * The leaderboard to get
 */
export type V1LeaderboardPreviewAccountRankRequestBodyLeaderboard = ClosedEnum<
  typeof V1LeaderboardPreviewAccountRankRequestBodyLeaderboard
>;

export type V1LeaderboardPreviewAccountRankRequestBody = {
  id?: IDStruct | undefined;
  /**
   * The leaderboard to get
   */
  leaderboard: V1LeaderboardPreviewAccountRankRequestBodyLeaderboard;
  /**
   * What their leaderboard score would be
   */
  value?: number | undefined;
  vanity?: VanityStruct | undefined;
};

/** @internal */
export const V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$inboundSchema:
  z.ZodNativeEnum<
    typeof V1LeaderboardPreviewAccountRankRequestBodyLeaderboard
  > = z.nativeEnum(V1LeaderboardPreviewAccountRankRequestBodyLeaderboard);

/** @internal */
export const V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$outboundSchema:
  z.ZodNativeEnum<
    typeof V1LeaderboardPreviewAccountRankRequestBodyLeaderboard
  > = V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$ {
  /** @deprecated use `V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$inboundSchema` instead. */
  export const inboundSchema =
    V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$inboundSchema;
  /** @deprecated use `V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$outboundSchema` instead. */
  export const outboundSchema =
    V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$outboundSchema;
}

/** @internal */
export const V1LeaderboardPreviewAccountRankRequestBody$inboundSchema:
  z.ZodType<V1LeaderboardPreviewAccountRankRequestBody, z.ZodTypeDef, unknown> =
    z.object({
      id: IDStruct$inboundSchema.optional(),
      leaderboard:
        V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$inboundSchema,
      value: z.number().int().optional(),
      vanity: VanityStruct$inboundSchema.optional(),
    });

/** @internal */
export type V1LeaderboardPreviewAccountRankRequestBody$Outbound = {
  id?: IDStruct$Outbound | undefined;
  leaderboard: string;
  value?: number | undefined;
  vanity?: VanityStruct$Outbound | undefined;
};

/** @internal */
export const V1LeaderboardPreviewAccountRankRequestBody$outboundSchema:
  z.ZodType<
    V1LeaderboardPreviewAccountRankRequestBody$Outbound,
    z.ZodTypeDef,
    V1LeaderboardPreviewAccountRankRequestBody
  > = z.object({
    id: IDStruct$outboundSchema.optional(),
    leaderboard:
      V1LeaderboardPreviewAccountRankRequestBodyLeaderboard$outboundSchema,
    value: z.number().int().optional(),
    vanity: VanityStruct$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1LeaderboardPreviewAccountRankRequestBody$ {
  /** @deprecated use `V1LeaderboardPreviewAccountRankRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    V1LeaderboardPreviewAccountRankRequestBody$inboundSchema;
  /** @deprecated use `V1LeaderboardPreviewAccountRankRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    V1LeaderboardPreviewAccountRankRequestBody$outboundSchema;
  /** @deprecated use `V1LeaderboardPreviewAccountRankRequestBody$Outbound` instead. */
  export type Outbound = V1LeaderboardPreviewAccountRankRequestBody$Outbound;
}

export function v1LeaderboardPreviewAccountRankRequestBodyToJSON(
  v1LeaderboardPreviewAccountRankRequestBody:
    V1LeaderboardPreviewAccountRankRequestBody,
): string {
  return JSON.stringify(
    V1LeaderboardPreviewAccountRankRequestBody$outboundSchema.parse(
      v1LeaderboardPreviewAccountRankRequestBody,
    ),
  );
}

export function v1LeaderboardPreviewAccountRankRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  V1LeaderboardPreviewAccountRankRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V1LeaderboardPreviewAccountRankRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V1LeaderboardPreviewAccountRankRequestBody' from JSON`,
  );
}
