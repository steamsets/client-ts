/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type V1Resource = {
    resource: string;
    /**
     * The value of the resource, this can be a string, number, boolean or even a cron expression
     */
    value: string;
};

/** @internal */
export const V1Resource$inboundSchema: z.ZodType<V1Resource, z.ZodTypeDef, unknown> = z.object({
    resource: z.string(),
    value: z.string(),
});

/** @internal */
export type V1Resource$Outbound = {
    resource: string;
    value: string;
};

/** @internal */
export const V1Resource$outboundSchema: z.ZodType<V1Resource$Outbound, z.ZodTypeDef, V1Resource> =
    z.object({
        resource: z.string(),
        value: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1Resource$ {
    /** @deprecated use `V1Resource$inboundSchema` instead. */
    export const inboundSchema = V1Resource$inboundSchema;
    /** @deprecated use `V1Resource$outboundSchema` instead. */
    export const outboundSchema = V1Resource$outboundSchema;
    /** @deprecated use `V1Resource$Outbound` instead. */
    export type Outbound = V1Resource$Outbound;
}
