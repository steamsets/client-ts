/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V1BadgeTypeCount,
  V1BadgeTypeCount$inboundSchema,
  V1BadgeTypeCount$Outbound,
  V1BadgeTypeCount$outboundSchema,
} from "./v1badgetypecount.js";

export type V1BadgeSetCounts = {
  duplicate: V1BadgeTypeCount;
  total: V1BadgeTypeCount;
  unique: V1BadgeTypeCount;
};

/** @internal */
export const V1BadgeSetCounts$inboundSchema: z.ZodType<
  V1BadgeSetCounts,
  z.ZodTypeDef,
  unknown
> = z.object({
  duplicate: V1BadgeTypeCount$inboundSchema,
  total: V1BadgeTypeCount$inboundSchema,
  unique: V1BadgeTypeCount$inboundSchema,
});

/** @internal */
export type V1BadgeSetCounts$Outbound = {
  duplicate: V1BadgeTypeCount$Outbound;
  total: V1BadgeTypeCount$Outbound;
  unique: V1BadgeTypeCount$Outbound;
};

/** @internal */
export const V1BadgeSetCounts$outboundSchema: z.ZodType<
  V1BadgeSetCounts$Outbound,
  z.ZodTypeDef,
  V1BadgeSetCounts
> = z.object({
  duplicate: V1BadgeTypeCount$outboundSchema,
  total: V1BadgeTypeCount$outboundSchema,
  unique: V1BadgeTypeCount$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeSetCounts$ {
  /** @deprecated use `V1BadgeSetCounts$inboundSchema` instead. */
  export const inboundSchema = V1BadgeSetCounts$inboundSchema;
  /** @deprecated use `V1BadgeSetCounts$outboundSchema` instead. */
  export const outboundSchema = V1BadgeSetCounts$outboundSchema;
  /** @deprecated use `V1BadgeSetCounts$Outbound` instead. */
  export type Outbound = V1BadgeSetCounts$Outbound;
}

export function v1BadgeSetCountsToJSON(
  v1BadgeSetCounts: V1BadgeSetCounts,
): string {
  return JSON.stringify(
    V1BadgeSetCounts$outboundSchema.parse(v1BadgeSetCounts),
  );
}

export function v1BadgeSetCountsFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeSetCounts, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeSetCounts$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeSetCounts' from JSON`,
  );
}
