/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AccountBadgeInfo = {
  /**
   * The time the badge was completed
   */
  completionTime: Date;
  /**
   * The level of the badge
   */
  level: number;
  /**
   * The xp of the badge
   */
  xp: number;
};

/** @internal */
export const AccountBadgeInfo$inboundSchema: z.ZodType<
  AccountBadgeInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  completionTime: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  level: z.number().int(),
  xp: z.number().int(),
});

/** @internal */
export type AccountBadgeInfo$Outbound = {
  completionTime: string;
  level: number;
  xp: number;
};

/** @internal */
export const AccountBadgeInfo$outboundSchema: z.ZodType<
  AccountBadgeInfo$Outbound,
  z.ZodTypeDef,
  AccountBadgeInfo
> = z.object({
  completionTime: z.date().transform(v => v.toISOString()),
  level: z.number().int(),
  xp: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountBadgeInfo$ {
  /** @deprecated use `AccountBadgeInfo$inboundSchema` instead. */
  export const inboundSchema = AccountBadgeInfo$inboundSchema;
  /** @deprecated use `AccountBadgeInfo$outboundSchema` instead. */
  export const outboundSchema = AccountBadgeInfo$outboundSchema;
  /** @deprecated use `AccountBadgeInfo$Outbound` instead. */
  export type Outbound = AccountBadgeInfo$Outbound;
}
