/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type Role = {
    /**
     * The role color
     */
    color: string;
    /**
     * The role icon
     */
    icon: string;
    /**
     * The Group name
     */
    name: string;
    role: string;
};

/** @internal */
export const Role$inboundSchema: z.ZodType<Role, z.ZodTypeDef, unknown> = z
    .object({
        Color: z.string(),
        icon: z.string(),
        name: z.string(),
        role: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            Color: "color",
        });
    });

/** @internal */
export type Role$Outbound = {
    Color: string;
    icon: string;
    name: string;
    role: string;
};

/** @internal */
export const Role$outboundSchema: z.ZodType<Role$Outbound, z.ZodTypeDef, Role> = z
    .object({
        color: z.string(),
        icon: z.string(),
        name: z.string(),
        role: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            color: "Color",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Role$ {
    /** @deprecated use `Role$inboundSchema` instead. */
    export const inboundSchema = Role$inboundSchema;
    /** @deprecated use `Role$outboundSchema` instead. */
    export const outboundSchema = Role$outboundSchema;
    /** @deprecated use `Role$Outbound` instead. */
    export type Outbound = Role$Outbound;
}
