/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BadgeLevel = {
  image: string;
  name: string;
  scarcity: number;
};

/** @internal */
export const V1BadgeLevel$inboundSchema: z.ZodType<
  V1BadgeLevel,
  z.ZodTypeDef,
  unknown
> = z.object({
  image: z.string(),
  name: z.string(),
  scarcity: z.number().int(),
});

/** @internal */
export type V1BadgeLevel$Outbound = {
  image: string;
  name: string;
  scarcity: number;
};

/** @internal */
export const V1BadgeLevel$outboundSchema: z.ZodType<
  V1BadgeLevel$Outbound,
  z.ZodTypeDef,
  V1BadgeLevel
> = z.object({
  image: z.string(),
  name: z.string(),
  scarcity: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeLevel$ {
  /** @deprecated use `V1BadgeLevel$inboundSchema` instead. */
  export const inboundSchema = V1BadgeLevel$inboundSchema;
  /** @deprecated use `V1BadgeLevel$outboundSchema` instead. */
  export const outboundSchema = V1BadgeLevel$outboundSchema;
  /** @deprecated use `V1BadgeLevel$Outbound` instead. */
  export type Outbound = V1BadgeLevel$Outbound;
}

export function v1BadgeLevelToJSON(v1BadgeLevel: V1BadgeLevel): string {
  return JSON.stringify(V1BadgeLevel$outboundSchema.parse(v1BadgeLevel));
}

export function v1BadgeLevelFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeLevel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeLevel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeLevel' from JSON`,
  );
}
