/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type LeaderboardAccountBadgeInfo = {
  /**
   * The time the badge was completed
   */
  completionTime: Date;
  /**
   * The level of the badge
   */
  level: number;
  /**
   * The xp of the badge
   */
  xp: number;
};

/** @internal */
export const LeaderboardAccountBadgeInfo$inboundSchema: z.ZodType<
  LeaderboardAccountBadgeInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  completionTime: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  level: z.number().int(),
  xp: z.number().int(),
});

/** @internal */
export type LeaderboardAccountBadgeInfo$Outbound = {
  completionTime: string;
  level: number;
  xp: number;
};

/** @internal */
export const LeaderboardAccountBadgeInfo$outboundSchema: z.ZodType<
  LeaderboardAccountBadgeInfo$Outbound,
  z.ZodTypeDef,
  LeaderboardAccountBadgeInfo
> = z.object({
  completionTime: z.date().transform(v => v.toISOString()),
  level: z.number().int(),
  xp: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeaderboardAccountBadgeInfo$ {
  /** @deprecated use `LeaderboardAccountBadgeInfo$inboundSchema` instead. */
  export const inboundSchema = LeaderboardAccountBadgeInfo$inboundSchema;
  /** @deprecated use `LeaderboardAccountBadgeInfo$outboundSchema` instead. */
  export const outboundSchema = LeaderboardAccountBadgeInfo$outboundSchema;
  /** @deprecated use `LeaderboardAccountBadgeInfo$Outbound` instead. */
  export type Outbound = LeaderboardAccountBadgeInfo$Outbound;
}
