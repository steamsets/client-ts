/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IDStruct,
  IDStruct$inboundSchema,
  IDStruct$Outbound,
  IDStruct$outboundSchema,
} from "./idstruct.js";
import {
  VanityStruct,
  VanityStruct$inboundSchema,
  VanityStruct$Outbound,
  VanityStruct$outboundSchema,
} from "./vanitystruct.js";

export type V1AccountQueueUpdateRequestBody = {
  /**
   * Force the queue to process this account, staff only
   */
  force?: boolean | undefined;
  id?: IDStruct | undefined;
  vanity?: VanityStruct | undefined;
};

/** @internal */
export const V1AccountQueueUpdateRequestBody$inboundSchema: z.ZodType<
  V1AccountQueueUpdateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  force: z.boolean().default(false),
  id: IDStruct$inboundSchema.optional(),
  vanity: VanityStruct$inboundSchema.optional(),
});

/** @internal */
export type V1AccountQueueUpdateRequestBody$Outbound = {
  force: boolean;
  id?: IDStruct$Outbound | undefined;
  vanity?: VanityStruct$Outbound | undefined;
};

/** @internal */
export const V1AccountQueueUpdateRequestBody$outboundSchema: z.ZodType<
  V1AccountQueueUpdateRequestBody$Outbound,
  z.ZodTypeDef,
  V1AccountQueueUpdateRequestBody
> = z.object({
  force: z.boolean().default(false),
  id: IDStruct$outboundSchema.optional(),
  vanity: VanityStruct$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountQueueUpdateRequestBody$ {
  /** @deprecated use `V1AccountQueueUpdateRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountQueueUpdateRequestBody$inboundSchema;
  /** @deprecated use `V1AccountQueueUpdateRequestBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountQueueUpdateRequestBody$outboundSchema;
  /** @deprecated use `V1AccountQueueUpdateRequestBody$Outbound` instead. */
  export type Outbound = V1AccountQueueUpdateRequestBody$Outbound;
}

export function v1AccountQueueUpdateRequestBodyToJSON(
  v1AccountQueueUpdateRequestBody: V1AccountQueueUpdateRequestBody,
): string {
  return JSON.stringify(
    V1AccountQueueUpdateRequestBody$outboundSchema.parse(
      v1AccountQueueUpdateRequestBody,
    ),
  );
}

export function v1AccountQueueUpdateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountQueueUpdateRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountQueueUpdateRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountQueueUpdateRequestBody' from JSON`,
  );
}
