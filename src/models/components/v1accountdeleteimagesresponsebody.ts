/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1AccountDeleteImagesResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
};

/** @internal */
export const V1AccountDeleteImagesResponseBody$inboundSchema: z.ZodType<
  V1AccountDeleteImagesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1AccountDeleteImagesResponseBody$Outbound = {
  $schema?: string | undefined;
};

/** @internal */
export const V1AccountDeleteImagesResponseBody$outboundSchema: z.ZodType<
  V1AccountDeleteImagesResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountDeleteImagesResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountDeleteImagesResponseBody$ {
  /** @deprecated use `V1AccountDeleteImagesResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountDeleteImagesResponseBody$inboundSchema;
  /** @deprecated use `V1AccountDeleteImagesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    V1AccountDeleteImagesResponseBody$outboundSchema;
  /** @deprecated use `V1AccountDeleteImagesResponseBody$Outbound` instead. */
  export type Outbound = V1AccountDeleteImagesResponseBody$Outbound;
}

export function v1AccountDeleteImagesResponseBodyToJSON(
  v1AccountDeleteImagesResponseBody: V1AccountDeleteImagesResponseBody,
): string {
  return JSON.stringify(
    V1AccountDeleteImagesResponseBody$outboundSchema.parse(
      v1AccountDeleteImagesResponseBody,
    ),
  );
}

export function v1AccountDeleteImagesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountDeleteImagesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountDeleteImagesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountDeleteImagesResponseBody' from JSON`,
  );
}
