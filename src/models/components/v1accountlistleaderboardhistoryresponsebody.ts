/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountLeaderboardHistory,
  AccountLeaderboardHistory$inboundSchema,
  AccountLeaderboardHistory$Outbound,
  AccountLeaderboardHistory$outboundSchema,
} from "./accountleaderboardhistory.js";

export type V1AccountListLeaderboardHistoryResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  histories: Array<AccountLeaderboardHistory> | null;
};

/** @internal */
export const V1AccountListLeaderboardHistoryResponseBody$inboundSchema:
  z.ZodType<
    V1AccountListLeaderboardHistoryResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    $schema: z.string().optional(),
    histories: z.nullable(z.array(AccountLeaderboardHistory$inboundSchema)),
  }).transform((v) => {
    return remap$(v, {
      "$schema": "dollarSchema",
    });
  });

/** @internal */
export type V1AccountListLeaderboardHistoryResponseBody$Outbound = {
  $schema?: string | undefined;
  histories: Array<AccountLeaderboardHistory$Outbound> | null;
};

/** @internal */
export const V1AccountListLeaderboardHistoryResponseBody$outboundSchema:
  z.ZodType<
    V1AccountListLeaderboardHistoryResponseBody$Outbound,
    z.ZodTypeDef,
    V1AccountListLeaderboardHistoryResponseBody
  > = z.object({
    dollarSchema: z.string().optional(),
    histories: z.nullable(z.array(AccountLeaderboardHistory$outboundSchema)),
  }).transform((v) => {
    return remap$(v, {
      dollarSchema: "$schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountListLeaderboardHistoryResponseBody$ {
  /** @deprecated use `V1AccountListLeaderboardHistoryResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    V1AccountListLeaderboardHistoryResponseBody$inboundSchema;
  /** @deprecated use `V1AccountListLeaderboardHistoryResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    V1AccountListLeaderboardHistoryResponseBody$outboundSchema;
  /** @deprecated use `V1AccountListLeaderboardHistoryResponseBody$Outbound` instead. */
  export type Outbound = V1AccountListLeaderboardHistoryResponseBody$Outbound;
}

export function v1AccountListLeaderboardHistoryResponseBodyToJSON(
  v1AccountListLeaderboardHistoryResponseBody:
    V1AccountListLeaderboardHistoryResponseBody,
): string {
  return JSON.stringify(
    V1AccountListLeaderboardHistoryResponseBody$outboundSchema.parse(
      v1AccountListLeaderboardHistoryResponseBody,
    ),
  );
}

export function v1AccountListLeaderboardHistoryResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  V1AccountListLeaderboardHistoryResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V1AccountListLeaderboardHistoryResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V1AccountListLeaderboardHistoryResponseBody' from JSON`,
  );
}
