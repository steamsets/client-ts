/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  LeaderboardApp,
  LeaderboardApp$inboundSchema,
  LeaderboardApp$Outbound,
  LeaderboardApp$outboundSchema,
} from "./leaderboardapp.js";
import {
  V1AccountLeaderboardAccount,
  V1AccountLeaderboardAccount$inboundSchema,
  V1AccountLeaderboardAccount$Outbound,
  V1AccountLeaderboardAccount$outboundSchema,
} from "./v1accountleaderboardaccount.js";
import {
  V1AccountLeaderboardBadgeInfo,
  V1AccountLeaderboardBadgeInfo$inboundSchema,
  V1AccountLeaderboardBadgeInfo$Outbound,
  V1AccountLeaderboardBadgeInfo$outboundSchema,
} from "./v1accountleaderboardbadgeinfo.js";
import {
  V1LeaderboardLocation,
  V1LeaderboardLocation$inboundSchema,
  V1LeaderboardLocation$Outbound,
  V1LeaderboardLocation$outboundSchema,
} from "./v1leaderboardlocation.js";

export type V1AccountLeaderboardResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  accounts: Array<V1AccountLeaderboardAccount> | null;
  app?: LeaderboardApp | null | undefined;
  badgeInfo?: V1AccountLeaderboardBadgeInfo | null | undefined;
  location?: V1LeaderboardLocation | null | undefined;
};

/** @internal */
export const V1AccountLeaderboardResponseBody$inboundSchema: z.ZodType<
  V1AccountLeaderboardResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  accounts: z.nullable(z.array(V1AccountLeaderboardAccount$inboundSchema)),
  app: z.nullable(LeaderboardApp$inboundSchema).optional(),
  badgeInfo: z.nullable(V1AccountLeaderboardBadgeInfo$inboundSchema).optional(),
  location: z.nullable(V1LeaderboardLocation$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1AccountLeaderboardResponseBody$Outbound = {
  $schema?: string | undefined;
  accounts: Array<V1AccountLeaderboardAccount$Outbound> | null;
  app?: LeaderboardApp$Outbound | null | undefined;
  badgeInfo?: V1AccountLeaderboardBadgeInfo$Outbound | null | undefined;
  location?: V1LeaderboardLocation$Outbound | null | undefined;
};

/** @internal */
export const V1AccountLeaderboardResponseBody$outboundSchema: z.ZodType<
  V1AccountLeaderboardResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountLeaderboardResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  accounts: z.nullable(z.array(V1AccountLeaderboardAccount$outboundSchema)),
  app: z.nullable(LeaderboardApp$outboundSchema).optional(),
  badgeInfo: z.nullable(V1AccountLeaderboardBadgeInfo$outboundSchema)
    .optional(),
  location: z.nullable(V1LeaderboardLocation$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountLeaderboardResponseBody$ {
  /** @deprecated use `V1AccountLeaderboardResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountLeaderboardResponseBody$inboundSchema;
  /** @deprecated use `V1AccountLeaderboardResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountLeaderboardResponseBody$outboundSchema;
  /** @deprecated use `V1AccountLeaderboardResponseBody$Outbound` instead. */
  export type Outbound = V1AccountLeaderboardResponseBody$Outbound;
}
