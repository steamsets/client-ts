/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  IDStruct,
  IDStruct$inboundSchema,
  IDStruct$Outbound,
  IDStruct$outboundSchema,
} from "./idstruct.js";
import {
  V1AppOrder,
  V1AppOrder$inboundSchema,
  V1AppOrder$Outbound,
  V1AppOrder$outboundSchema,
} from "./v1apporder.js";
import {
  VanityStruct,
  VanityStruct$inboundSchema,
  VanityStruct$Outbound,
  VanityStruct$outboundSchema,
} from "./vanitystruct.js";

export type V1AccountListAppsRequestBody = {
  id?: IDStruct | undefined;
  order?: V1AppOrder | null | undefined;
  page?: number | undefined;
  search?: string | null | undefined;
  vanity?: VanityStruct | undefined;
};

/** @internal */
export const V1AccountListAppsRequestBody$inboundSchema: z.ZodType<
  V1AccountListAppsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: IDStruct$inboundSchema.optional(),
  order: z.nullable(V1AppOrder$inboundSchema).optional(),
  page: z.number().int().default(1),
  search: z.nullable(z.string()).optional(),
  vanity: VanityStruct$inboundSchema.optional(),
});

/** @internal */
export type V1AccountListAppsRequestBody$Outbound = {
  id?: IDStruct$Outbound | undefined;
  order?: V1AppOrder$Outbound | null | undefined;
  page: number;
  search?: string | null | undefined;
  vanity?: VanityStruct$Outbound | undefined;
};

/** @internal */
export const V1AccountListAppsRequestBody$outboundSchema: z.ZodType<
  V1AccountListAppsRequestBody$Outbound,
  z.ZodTypeDef,
  V1AccountListAppsRequestBody
> = z.object({
  id: IDStruct$outboundSchema.optional(),
  order: z.nullable(V1AppOrder$outboundSchema).optional(),
  page: z.number().int().default(1),
  search: z.nullable(z.string()).optional(),
  vanity: VanityStruct$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountListAppsRequestBody$ {
  /** @deprecated use `V1AccountListAppsRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountListAppsRequestBody$inboundSchema;
  /** @deprecated use `V1AccountListAppsRequestBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountListAppsRequestBody$outboundSchema;
  /** @deprecated use `V1AccountListAppsRequestBody$Outbound` instead. */
  export type Outbound = V1AccountListAppsRequestBody$Outbound;
}

export function v1AccountListAppsRequestBodyToJSON(
  v1AccountListAppsRequestBody: V1AccountListAppsRequestBody,
): string {
  return JSON.stringify(
    V1AccountListAppsRequestBody$outboundSchema.parse(
      v1AccountListAppsRequestBody,
    ),
  );
}

export function v1AccountListAppsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountListAppsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountListAppsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountListAppsRequestBody' from JSON`,
  );
}
