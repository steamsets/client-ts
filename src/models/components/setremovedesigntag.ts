/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetRemoveDesignTag = {
  /**
   * The id of the design/color
   */
  id?: string | null | undefined;
  /**
   * The tag to add to the database
   */
  name?: string | null | undefined;
  /**
   * Whether to remove the tag or not
   */
  remove?: boolean | undefined;
};

/** @internal */
export const SetRemoveDesignTag$inboundSchema: z.ZodType<
  SetRemoveDesignTag,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remove: z.boolean().optional(),
});

/** @internal */
export type SetRemoveDesignTag$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  remove?: boolean | undefined;
};

/** @internal */
export const SetRemoveDesignTag$outboundSchema: z.ZodType<
  SetRemoveDesignTag$Outbound,
  z.ZodTypeDef,
  SetRemoveDesignTag
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remove: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetRemoveDesignTag$ {
  /** @deprecated use `SetRemoveDesignTag$inboundSchema` instead. */
  export const inboundSchema = SetRemoveDesignTag$inboundSchema;
  /** @deprecated use `SetRemoveDesignTag$outboundSchema` instead. */
  export const outboundSchema = SetRemoveDesignTag$outboundSchema;
  /** @deprecated use `SetRemoveDesignTag$Outbound` instead. */
  export type Outbound = SetRemoveDesignTag$Outbound;
}

export function setRemoveDesignTagToJSON(
  setRemoveDesignTag: SetRemoveDesignTag,
): string {
  return JSON.stringify(
    SetRemoveDesignTag$outboundSchema.parse(setRemoveDesignTag),
  );
}

export function setRemoveDesignTagFromJSON(
  jsonString: string,
): SafeParseResult<SetRemoveDesignTag, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetRemoveDesignTag$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetRemoveDesignTag' from JSON`,
  );
}
