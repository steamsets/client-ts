/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1AccountUpdateSettingsRequestBody = {
  /**
   * The email the account should use, only if the account is private
   */
  email?: string | null | undefined;
  /**
   * Whether the account should be hidden in the leaderboards, only possible if the account is private
   */
  hidden: boolean;
  /**
   * The language the account should use, only if the account is private
   */
  language: string;
  /**
   * The vanity the account should use
   */
  vanity: string | null;
};

/** @internal */
export const V1AccountUpdateSettingsRequestBody$inboundSchema: z.ZodType<
  V1AccountUpdateSettingsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.nullable(z.string()).optional(),
  hidden: z.boolean(),
  language: z.string(),
  vanity: z.nullable(z.string()),
});

/** @internal */
export type V1AccountUpdateSettingsRequestBody$Outbound = {
  email?: string | null | undefined;
  hidden: boolean;
  language: string;
  vanity: string | null;
};

/** @internal */
export const V1AccountUpdateSettingsRequestBody$outboundSchema: z.ZodType<
  V1AccountUpdateSettingsRequestBody$Outbound,
  z.ZodTypeDef,
  V1AccountUpdateSettingsRequestBody
> = z.object({
  email: z.nullable(z.string()).optional(),
  hidden: z.boolean(),
  language: z.string(),
  vanity: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountUpdateSettingsRequestBody$ {
  /** @deprecated use `V1AccountUpdateSettingsRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountUpdateSettingsRequestBody$inboundSchema;
  /** @deprecated use `V1AccountUpdateSettingsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    V1AccountUpdateSettingsRequestBody$outboundSchema;
  /** @deprecated use `V1AccountUpdateSettingsRequestBody$Outbound` instead. */
  export type Outbound = V1AccountUpdateSettingsRequestBody$Outbound;
}

export function v1AccountUpdateSettingsRequestBodyToJSON(
  v1AccountUpdateSettingsRequestBody: V1AccountUpdateSettingsRequestBody,
): string {
  return JSON.stringify(
    V1AccountUpdateSettingsRequestBody$outboundSchema.parse(
      v1AccountUpdateSettingsRequestBody,
    ),
  );
}

export function v1AccountUpdateSettingsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountUpdateSettingsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V1AccountUpdateSettingsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountUpdateSettingsRequestBody' from JSON`,
  );
}
