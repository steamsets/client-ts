/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1AccountGetMetaResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  steamAvatarHashOfTheAccount: string;
  description: string;
  /**
   * Use this + cdn.steamsets.com/og/account/steamId.png as url
   */
  steamId: string;
  title: string;
};

/** @internal */
export const V1AccountGetMetaResponseBody$inboundSchema: z.ZodType<
  V1AccountGetMetaResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  "Steam Avatar hash of the account": z.string(),
  description: z.string(),
  steamId: z.string(),
  title: z.string(),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
    "Steam Avatar hash of the account": "steamAvatarHashOfTheAccount",
  });
});

/** @internal */
export type V1AccountGetMetaResponseBody$Outbound = {
  $schema?: string | undefined;
  "Steam Avatar hash of the account": string;
  description: string;
  steamId: string;
  title: string;
};

/** @internal */
export const V1AccountGetMetaResponseBody$outboundSchema: z.ZodType<
  V1AccountGetMetaResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountGetMetaResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  steamAvatarHashOfTheAccount: z.string(),
  description: z.string(),
  steamId: z.string(),
  title: z.string(),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
    steamAvatarHashOfTheAccount: "Steam Avatar hash of the account",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountGetMetaResponseBody$ {
  /** @deprecated use `V1AccountGetMetaResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountGetMetaResponseBody$inboundSchema;
  /** @deprecated use `V1AccountGetMetaResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountGetMetaResponseBody$outboundSchema;
  /** @deprecated use `V1AccountGetMetaResponseBody$Outbound` instead. */
  export type Outbound = V1AccountGetMetaResponseBody$Outbound;
}

export function v1AccountGetMetaResponseBodyToJSON(
  v1AccountGetMetaResponseBody: V1AccountGetMetaResponseBody,
): string {
  return JSON.stringify(
    V1AccountGetMetaResponseBody$outboundSchema.parse(
      v1AccountGetMetaResponseBody,
    ),
  );
}

export function v1AccountGetMetaResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountGetMetaResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountGetMetaResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountGetMetaResponseBody' from JSON`,
  );
}
