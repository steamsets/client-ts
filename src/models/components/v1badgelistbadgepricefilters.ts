/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BadgeListBadgePriceFilters = {
  completedBadges: boolean;
  freeToPlay: boolean;
  ownedCards: boolean;
  ownedGames: boolean;
};

/** @internal */
export const V1BadgeListBadgePriceFilters$inboundSchema: z.ZodType<
  V1BadgeListBadgePriceFilters,
  z.ZodTypeDef,
  unknown
> = z.object({
  completedBadges: z.boolean(),
  freeToPlay: z.boolean(),
  ownedCards: z.boolean(),
  ownedGames: z.boolean(),
});

/** @internal */
export type V1BadgeListBadgePriceFilters$Outbound = {
  completedBadges: boolean;
  freeToPlay: boolean;
  ownedCards: boolean;
  ownedGames: boolean;
};

/** @internal */
export const V1BadgeListBadgePriceFilters$outboundSchema: z.ZodType<
  V1BadgeListBadgePriceFilters$Outbound,
  z.ZodTypeDef,
  V1BadgeListBadgePriceFilters
> = z.object({
  completedBadges: z.boolean(),
  freeToPlay: z.boolean(),
  ownedCards: z.boolean(),
  ownedGames: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeListBadgePriceFilters$ {
  /** @deprecated use `V1BadgeListBadgePriceFilters$inboundSchema` instead. */
  export const inboundSchema = V1BadgeListBadgePriceFilters$inboundSchema;
  /** @deprecated use `V1BadgeListBadgePriceFilters$outboundSchema` instead. */
  export const outboundSchema = V1BadgeListBadgePriceFilters$outboundSchema;
  /** @deprecated use `V1BadgeListBadgePriceFilters$Outbound` instead. */
  export type Outbound = V1BadgeListBadgePriceFilters$Outbound;
}

export function v1BadgeListBadgePriceFiltersToJSON(
  v1BadgeListBadgePriceFilters: V1BadgeListBadgePriceFilters,
): string {
  return JSON.stringify(
    V1BadgeListBadgePriceFilters$outboundSchema.parse(
      v1BadgeListBadgePriceFilters,
    ),
  );
}

export function v1BadgeListBadgePriceFiltersFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeListBadgePriceFilters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeListBadgePriceFilters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeListBadgePriceFilters' from JSON`,
  );
}
