/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V1AppBadge,
  V1AppBadge$inboundSchema,
  V1AppBadge$Outbound,
  V1AppBadge$outboundSchema,
} from "./v1appbadge.js";

export type V1AccountListBadgesResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  badges: Array<V1AppBadge> | null;
  /**
   * The number of pages
   */
  pages: number;
  /**
   * The total number of hits for all pages
   */
  totalHits: number;
};

/** @internal */
export const V1AccountListBadgesResponseBody$inboundSchema: z.ZodType<
  V1AccountListBadgesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  badges: z.nullable(z.array(V1AppBadge$inboundSchema)),
  pages: z.number().int(),
  totalHits: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1AccountListBadgesResponseBody$Outbound = {
  $schema?: string | undefined;
  badges: Array<V1AppBadge$Outbound> | null;
  pages: number;
  totalHits: number;
};

/** @internal */
export const V1AccountListBadgesResponseBody$outboundSchema: z.ZodType<
  V1AccountListBadgesResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountListBadgesResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  badges: z.nullable(z.array(V1AppBadge$outboundSchema)),
  pages: z.number().int(),
  totalHits: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountListBadgesResponseBody$ {
  /** @deprecated use `V1AccountListBadgesResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountListBadgesResponseBody$inboundSchema;
  /** @deprecated use `V1AccountListBadgesResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountListBadgesResponseBody$outboundSchema;
  /** @deprecated use `V1AccountListBadgesResponseBody$Outbound` instead. */
  export type Outbound = V1AccountListBadgesResponseBody$Outbound;
}

export function v1AccountListBadgesResponseBodyToJSON(
  v1AccountListBadgesResponseBody: V1AccountListBadgesResponseBody,
): string {
  return JSON.stringify(
    V1AccountListBadgesResponseBody$outboundSchema.parse(
      v1AccountListBadgesResponseBody,
    ),
  );
}

export function v1AccountListBadgesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountListBadgesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountListBadgesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountListBadgesResponseBody' from JSON`,
  );
}
