/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1AccountDeleteSessionRequestBody = {
  /**
   * The session id to delete
   */
  sessionId: string;
};

/** @internal */
export const V1AccountDeleteSessionRequestBody$inboundSchema: z.ZodType<
  V1AccountDeleteSessionRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  sessionId: z.string(),
});

/** @internal */
export type V1AccountDeleteSessionRequestBody$Outbound = {
  sessionId: string;
};

/** @internal */
export const V1AccountDeleteSessionRequestBody$outboundSchema: z.ZodType<
  V1AccountDeleteSessionRequestBody$Outbound,
  z.ZodTypeDef,
  V1AccountDeleteSessionRequestBody
> = z.object({
  sessionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountDeleteSessionRequestBody$ {
  /** @deprecated use `V1AccountDeleteSessionRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountDeleteSessionRequestBody$inboundSchema;
  /** @deprecated use `V1AccountDeleteSessionRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    V1AccountDeleteSessionRequestBody$outboundSchema;
  /** @deprecated use `V1AccountDeleteSessionRequestBody$Outbound` instead. */
  export type Outbound = V1AccountDeleteSessionRequestBody$Outbound;
}

export function v1AccountDeleteSessionRequestBodyToJSON(
  v1AccountDeleteSessionRequestBody: V1AccountDeleteSessionRequestBody,
): string {
  return JSON.stringify(
    V1AccountDeleteSessionRequestBody$outboundSchema.parse(
      v1AccountDeleteSessionRequestBody,
    ),
  );
}

export function v1AccountDeleteSessionRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountDeleteSessionRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountDeleteSessionRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountDeleteSessionRequestBody' from JSON`,
  );
}
