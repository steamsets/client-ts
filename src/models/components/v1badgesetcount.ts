/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BadgeSetCount = {
  duplicateSets: number;
  uniqueSets: number;
};

/** @internal */
export const V1BadgeSetCount$inboundSchema: z.ZodType<
  V1BadgeSetCount,
  z.ZodTypeDef,
  unknown
> = z.object({
  duplicateSets: z.number().int(),
  uniqueSets: z.number().int(),
});

/** @internal */
export type V1BadgeSetCount$Outbound = {
  duplicateSets: number;
  uniqueSets: number;
};

/** @internal */
export const V1BadgeSetCount$outboundSchema: z.ZodType<
  V1BadgeSetCount$Outbound,
  z.ZodTypeDef,
  V1BadgeSetCount
> = z.object({
  duplicateSets: z.number().int(),
  uniqueSets: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeSetCount$ {
  /** @deprecated use `V1BadgeSetCount$inboundSchema` instead. */
  export const inboundSchema = V1BadgeSetCount$inboundSchema;
  /** @deprecated use `V1BadgeSetCount$outboundSchema` instead. */
  export const outboundSchema = V1BadgeSetCount$outboundSchema;
  /** @deprecated use `V1BadgeSetCount$Outbound` instead. */
  export type Outbound = V1BadgeSetCount$Outbound;
}

export function v1BadgeSetCountToJSON(
  v1BadgeSetCount: V1BadgeSetCount,
): string {
  return JSON.stringify(V1BadgeSetCount$outboundSchema.parse(v1BadgeSetCount));
}

export function v1BadgeSetCountFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeSetCount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeSetCount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeSetCount' from JSON`,
  );
}
