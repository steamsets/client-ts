/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountLeaderboardHistory,
  AccountLeaderboardHistory$inboundSchema,
  AccountLeaderboardHistory$Outbound,
  AccountLeaderboardHistory$outboundSchema,
} from "./accountleaderboardhistory.js";

export type V1AccountLeaderboardHistoryResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  histories: Array<AccountLeaderboardHistory> | null;
};

/** @internal */
export const V1AccountLeaderboardHistoryResponseBody$inboundSchema: z.ZodType<
  V1AccountLeaderboardHistoryResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  histories: z.nullable(z.array(AccountLeaderboardHistory$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1AccountLeaderboardHistoryResponseBody$Outbound = {
  $schema?: string | undefined;
  histories: Array<AccountLeaderboardHistory$Outbound> | null;
};

/** @internal */
export const V1AccountLeaderboardHistoryResponseBody$outboundSchema: z.ZodType<
  V1AccountLeaderboardHistoryResponseBody$Outbound,
  z.ZodTypeDef,
  V1AccountLeaderboardHistoryResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  histories: z.nullable(z.array(AccountLeaderboardHistory$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountLeaderboardHistoryResponseBody$ {
  /** @deprecated use `V1AccountLeaderboardHistoryResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    V1AccountLeaderboardHistoryResponseBody$inboundSchema;
  /** @deprecated use `V1AccountLeaderboardHistoryResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    V1AccountLeaderboardHistoryResponseBody$outboundSchema;
  /** @deprecated use `V1AccountLeaderboardHistoryResponseBody$Outbound` instead. */
  export type Outbound = V1AccountLeaderboardHistoryResponseBody$Outbound;
}

export function v1AccountLeaderboardHistoryResponseBodyToJSON(
  v1AccountLeaderboardHistoryResponseBody:
    V1AccountLeaderboardHistoryResponseBody,
): string {
  return JSON.stringify(
    V1AccountLeaderboardHistoryResponseBody$outboundSchema.parse(
      v1AccountLeaderboardHistoryResponseBody,
    ),
  );
}

export function v1AccountLeaderboardHistoryResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  V1AccountLeaderboardHistoryResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V1AccountLeaderboardHistoryResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V1AccountLeaderboardHistoryResponseBody' from JSON`,
  );
}
