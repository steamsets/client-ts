/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ColorTag,
  ColorTag$inboundSchema,
  ColorTag$Outbound,
  ColorTag$outboundSchema,
} from "./colortag.js";
import {
  DesignTag,
  DesignTag$inboundSchema,
  DesignTag$Outbound,
  DesignTag$outboundSchema,
} from "./designtag.js";

export type V1BadgeTagsResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  /**
   * The available color tags
   */
  colorTags: Array<ColorTag> | null;
  /**
   * The available design tags
   */
  designTags: Array<DesignTag> | null;
};

/** @internal */
export const V1BadgeTagsResponseBody$inboundSchema: z.ZodType<
  V1BadgeTagsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  colorTags: z.nullable(z.array(ColorTag$inboundSchema)),
  designTags: z.nullable(z.array(DesignTag$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1BadgeTagsResponseBody$Outbound = {
  $schema?: string | undefined;
  colorTags: Array<ColorTag$Outbound> | null;
  designTags: Array<DesignTag$Outbound> | null;
};

/** @internal */
export const V1BadgeTagsResponseBody$outboundSchema: z.ZodType<
  V1BadgeTagsResponseBody$Outbound,
  z.ZodTypeDef,
  V1BadgeTagsResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  colorTags: z.nullable(z.array(ColorTag$outboundSchema)),
  designTags: z.nullable(z.array(DesignTag$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeTagsResponseBody$ {
  /** @deprecated use `V1BadgeTagsResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1BadgeTagsResponseBody$inboundSchema;
  /** @deprecated use `V1BadgeTagsResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1BadgeTagsResponseBody$outboundSchema;
  /** @deprecated use `V1BadgeTagsResponseBody$Outbound` instead. */
  export type Outbound = V1BadgeTagsResponseBody$Outbound;
}

export function v1BadgeTagsResponseBodyToJSON(
  v1BadgeTagsResponseBody: V1BadgeTagsResponseBody,
): string {
  return JSON.stringify(
    V1BadgeTagsResponseBody$outboundSchema.parse(v1BadgeTagsResponseBody),
  );
}

export function v1BadgeTagsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeTagsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeTagsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeTagsResponseBody' from JSON`,
  );
}
