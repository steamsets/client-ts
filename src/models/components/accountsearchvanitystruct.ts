/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Which type of vanity to search for
 */
export const AccountSearchVanityStructType = {
  Steam: "steam",
  Internal: "internal",
} as const;
/**
 * Which type of vanity to search for
 */
export type AccountSearchVanityStructType = ClosedEnum<
  typeof AccountSearchVanityStructType
>;

export type AccountSearchVanityStruct = {
  /**
   * Which type of vanity to search for
   */
  type: AccountSearchVanityStructType;
  /**
   * Vanity to search for
   */
  value: string;
};

/** @internal */
export const AccountSearchVanityStructType$inboundSchema: z.ZodNativeEnum<
  typeof AccountSearchVanityStructType
> = z.nativeEnum(AccountSearchVanityStructType);

/** @internal */
export const AccountSearchVanityStructType$outboundSchema: z.ZodNativeEnum<
  typeof AccountSearchVanityStructType
> = AccountSearchVanityStructType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountSearchVanityStructType$ {
  /** @deprecated use `AccountSearchVanityStructType$inboundSchema` instead. */
  export const inboundSchema = AccountSearchVanityStructType$inboundSchema;
  /** @deprecated use `AccountSearchVanityStructType$outboundSchema` instead. */
  export const outboundSchema = AccountSearchVanityStructType$outboundSchema;
}

/** @internal */
export const AccountSearchVanityStruct$inboundSchema: z.ZodType<
  AccountSearchVanityStruct,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: AccountSearchVanityStructType$inboundSchema,
  value: z.string(),
});

/** @internal */
export type AccountSearchVanityStruct$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const AccountSearchVanityStruct$outboundSchema: z.ZodType<
  AccountSearchVanityStruct$Outbound,
  z.ZodTypeDef,
  AccountSearchVanityStruct
> = z.object({
  type: AccountSearchVanityStructType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountSearchVanityStruct$ {
  /** @deprecated use `AccountSearchVanityStruct$inboundSchema` instead. */
  export const inboundSchema = AccountSearchVanityStruct$inboundSchema;
  /** @deprecated use `AccountSearchVanityStruct$outboundSchema` instead. */
  export const outboundSchema = AccountSearchVanityStruct$outboundSchema;
  /** @deprecated use `AccountSearchVanityStruct$Outbound` instead. */
  export type Outbound = AccountSearchVanityStruct$Outbound;
}

export function accountSearchVanityStructToJSON(
  accountSearchVanityStruct: AccountSearchVanityStruct,
): string {
  return JSON.stringify(
    AccountSearchVanityStruct$outboundSchema.parse(accountSearchVanityStruct),
  );
}

export function accountSearchVanityStructFromJSON(
  jsonString: string,
): SafeParseResult<AccountSearchVanityStruct, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountSearchVanityStruct$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountSearchVanityStruct' from JSON`,
  );
}
