/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Which type of vanity to search for
 */
export const Type = {
    Steam: "steam",
    Internal: "internal",
} as const;
/**
 * Which type of vanity to search for
 */
export type Type = ClosedEnum<typeof Type>;

export type AccountSearchVanityStruct = {
    /**
     * Which type of vanity to search for
     */
    type?: Type | undefined;
    /**
     * Vanity to search for
     */
    value?: string | undefined;
};

/** @internal */
export const Type$inboundSchema: z.ZodNativeEnum<typeof Type> = z.nativeEnum(Type);

/** @internal */
export const Type$outboundSchema: z.ZodNativeEnum<typeof Type> = Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
    /** @deprecated use `Type$inboundSchema` instead. */
    export const inboundSchema = Type$inboundSchema;
    /** @deprecated use `Type$outboundSchema` instead. */
    export const outboundSchema = Type$outboundSchema;
}

/** @internal */
export const AccountSearchVanityStruct$inboundSchema: z.ZodType<
    AccountSearchVanityStruct,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: Type$inboundSchema.optional(),
    value: z.string().optional(),
});

/** @internal */
export type AccountSearchVanityStruct$Outbound = {
    type?: string | undefined;
    value?: string | undefined;
};

/** @internal */
export const AccountSearchVanityStruct$outboundSchema: z.ZodType<
    AccountSearchVanityStruct$Outbound,
    z.ZodTypeDef,
    AccountSearchVanityStruct
> = z.object({
    type: Type$outboundSchema.optional(),
    value: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountSearchVanityStruct$ {
    /** @deprecated use `AccountSearchVanityStruct$inboundSchema` instead. */
    export const inboundSchema = AccountSearchVanityStruct$inboundSchema;
    /** @deprecated use `AccountSearchVanityStruct$outboundSchema` instead. */
    export const outboundSchema = AccountSearchVanityStruct$outboundSchema;
    /** @deprecated use `AccountSearchVanityStruct$Outbound` instead. */
    export type Outbound = AccountSearchVanityStruct$Outbound;
}
