/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  V1BadgeListBadgePriceFilters,
  V1BadgeListBadgePriceFilters$inboundSchema,
  V1BadgeListBadgePriceFilters$Outbound,
  V1BadgeListBadgePriceFilters$outboundSchema,
} from "./v1badgelistbadgepricefilters.js";
import {
  V1BadgeListBadgePriceOrder,
  V1BadgeListBadgePriceOrder$inboundSchema,
  V1BadgeListBadgePriceOrder$Outbound,
  V1BadgeListBadgePriceOrder$outboundSchema,
} from "./v1badgelistbadgepriceorder.js";

export type V1BadgeListBadgePricesRequestBody = {
  filters?: V1BadgeListBadgePriceFilters | null | undefined;
  order?: V1BadgeListBadgePriceOrder | null | undefined;
};

/** @internal */
export const V1BadgeListBadgePricesRequestBody$inboundSchema: z.ZodType<
  V1BadgeListBadgePricesRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  filters: z.nullable(V1BadgeListBadgePriceFilters$inboundSchema).optional(),
  order: z.nullable(V1BadgeListBadgePriceOrder$inboundSchema).optional(),
});

/** @internal */
export type V1BadgeListBadgePricesRequestBody$Outbound = {
  filters?: V1BadgeListBadgePriceFilters$Outbound | null | undefined;
  order?: V1BadgeListBadgePriceOrder$Outbound | null | undefined;
};

/** @internal */
export const V1BadgeListBadgePricesRequestBody$outboundSchema: z.ZodType<
  V1BadgeListBadgePricesRequestBody$Outbound,
  z.ZodTypeDef,
  V1BadgeListBadgePricesRequestBody
> = z.object({
  filters: z.nullable(V1BadgeListBadgePriceFilters$outboundSchema).optional(),
  order: z.nullable(V1BadgeListBadgePriceOrder$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeListBadgePricesRequestBody$ {
  /** @deprecated use `V1BadgeListBadgePricesRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1BadgeListBadgePricesRequestBody$inboundSchema;
  /** @deprecated use `V1BadgeListBadgePricesRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    V1BadgeListBadgePricesRequestBody$outboundSchema;
  /** @deprecated use `V1BadgeListBadgePricesRequestBody$Outbound` instead. */
  export type Outbound = V1BadgeListBadgePricesRequestBody$Outbound;
}

export function v1BadgeListBadgePricesRequestBodyToJSON(
  v1BadgeListBadgePricesRequestBody: V1BadgeListBadgePricesRequestBody,
): string {
  return JSON.stringify(
    V1BadgeListBadgePricesRequestBody$outboundSchema.parse(
      v1BadgeListBadgePricesRequestBody,
    ),
  );
}

export function v1BadgeListBadgePricesRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeListBadgePricesRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeListBadgePricesRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeListBadgePricesRequestBody' from JSON`,
  );
}
