/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  V1AccountBadgeCompletion,
  V1AccountBadgeCompletion$inboundSchema,
  V1AccountBadgeCompletion$Outbound,
  V1AccountBadgeCompletion$outboundSchema,
} from "./v1accountbadgecompletion.js";

export type V1AppBadge = {
  accountBadge: V1AccountBadgeCompletion;
  badgeImage: string;
  firstCompletion: Date | null;
  highestLevel: number;
  isFoil: boolean;
  lastCompletion: Date | null;
  level: number;
  name: string;
  price: number;
  publicId: string;
  scarcity: number;
  steamId: number;
  xp: number;
};

/** @internal */
export const V1AppBadge$inboundSchema: z.ZodType<
  V1AppBadge,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountBadge: V1AccountBadgeCompletion$inboundSchema,
  badgeImage: z.string(),
  firstCompletion: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  highestLevel: z.number().int(),
  isFoil: z.boolean(),
  lastCompletion: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  level: z.number().int(),
  name: z.string(),
  price: z.number().int(),
  publicId: z.string(),
  scarcity: z.number().int(),
  steamId: z.number().int(),
  xp: z.number().int(),
});

/** @internal */
export type V1AppBadge$Outbound = {
  accountBadge: V1AccountBadgeCompletion$Outbound;
  badgeImage: string;
  firstCompletion: string | null;
  highestLevel: number;
  isFoil: boolean;
  lastCompletion: string | null;
  level: number;
  name: string;
  price: number;
  publicId: string;
  scarcity: number;
  steamId: number;
  xp: number;
};

/** @internal */
export const V1AppBadge$outboundSchema: z.ZodType<
  V1AppBadge$Outbound,
  z.ZodTypeDef,
  V1AppBadge
> = z.object({
  accountBadge: V1AccountBadgeCompletion$outboundSchema,
  badgeImage: z.string(),
  firstCompletion: z.nullable(z.date().transform(v => v.toISOString())),
  highestLevel: z.number().int(),
  isFoil: z.boolean(),
  lastCompletion: z.nullable(z.date().transform(v => v.toISOString())),
  level: z.number().int(),
  name: z.string(),
  price: z.number().int(),
  publicId: z.string(),
  scarcity: z.number().int(),
  steamId: z.number().int(),
  xp: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AppBadge$ {
  /** @deprecated use `V1AppBadge$inboundSchema` instead. */
  export const inboundSchema = V1AppBadge$inboundSchema;
  /** @deprecated use `V1AppBadge$outboundSchema` instead. */
  export const outboundSchema = V1AppBadge$outboundSchema;
  /** @deprecated use `V1AppBadge$Outbound` instead. */
  export type Outbound = V1AppBadge$Outbound;
}
