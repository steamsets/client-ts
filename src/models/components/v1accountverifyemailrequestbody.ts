/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1AccountVerifyEmailRequestBody = {
  /**
   * The code to verify
   */
  code: string;
};

/** @internal */
export const V1AccountVerifyEmailRequestBody$inboundSchema: z.ZodType<
  V1AccountVerifyEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
});

/** @internal */
export type V1AccountVerifyEmailRequestBody$Outbound = {
  code: string;
};

/** @internal */
export const V1AccountVerifyEmailRequestBody$outboundSchema: z.ZodType<
  V1AccountVerifyEmailRequestBody$Outbound,
  z.ZodTypeDef,
  V1AccountVerifyEmailRequestBody
> = z.object({
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AccountVerifyEmailRequestBody$ {
  /** @deprecated use `V1AccountVerifyEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1AccountVerifyEmailRequestBody$inboundSchema;
  /** @deprecated use `V1AccountVerifyEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema = V1AccountVerifyEmailRequestBody$outboundSchema;
  /** @deprecated use `V1AccountVerifyEmailRequestBody$Outbound` instead. */
  export type Outbound = V1AccountVerifyEmailRequestBody$Outbound;
}

export function v1AccountVerifyEmailRequestBodyToJSON(
  v1AccountVerifyEmailRequestBody: V1AccountVerifyEmailRequestBody,
): string {
  return JSON.stringify(
    V1AccountVerifyEmailRequestBody$outboundSchema.parse(
      v1AccountVerifyEmailRequestBody,
    ),
  );
}

export function v1AccountVerifyEmailRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1AccountVerifyEmailRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1AccountVerifyEmailRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1AccountVerifyEmailRequestBody' from JSON`,
  );
}
