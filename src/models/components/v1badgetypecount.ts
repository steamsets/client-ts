/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BadgeTypeCount = {
  foil: number;
  normal: number;
  total: number;
};

/** @internal */
export const V1BadgeTypeCount$inboundSchema: z.ZodType<
  V1BadgeTypeCount,
  z.ZodTypeDef,
  unknown
> = z.object({
  foil: z.number().int(),
  normal: z.number().int(),
  total: z.number().int(),
});

/** @internal */
export type V1BadgeTypeCount$Outbound = {
  foil: number;
  normal: number;
  total: number;
};

/** @internal */
export const V1BadgeTypeCount$outboundSchema: z.ZodType<
  V1BadgeTypeCount$Outbound,
  z.ZodTypeDef,
  V1BadgeTypeCount
> = z.object({
  foil: z.number().int(),
  normal: z.number().int(),
  total: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeTypeCount$ {
  /** @deprecated use `V1BadgeTypeCount$inboundSchema` instead. */
  export const inboundSchema = V1BadgeTypeCount$inboundSchema;
  /** @deprecated use `V1BadgeTypeCount$outboundSchema` instead. */
  export const outboundSchema = V1BadgeTypeCount$outboundSchema;
  /** @deprecated use `V1BadgeTypeCount$Outbound` instead. */
  export type Outbound = V1BadgeTypeCount$Outbound;
}

export function v1BadgeTypeCountToJSON(
  v1BadgeTypeCount: V1BadgeTypeCount,
): string {
  return JSON.stringify(
    V1BadgeTypeCount$outboundSchema.parse(v1BadgeTypeCount),
  );
}

export function v1BadgeTypeCountFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeTypeCount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeTypeCount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeTypeCount' from JSON`,
  );
}
