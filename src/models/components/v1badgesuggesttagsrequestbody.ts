/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BadgeSuggestTagsRequestBody = {
  /**
   * The ID of the badge to suggest tags for
   */
  badgeId: string;
};

/** @internal */
export const V1BadgeSuggestTagsRequestBody$inboundSchema: z.ZodType<
  V1BadgeSuggestTagsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  badgeId: z.string(),
});

/** @internal */
export type V1BadgeSuggestTagsRequestBody$Outbound = {
  badgeId: string;
};

/** @internal */
export const V1BadgeSuggestTagsRequestBody$outboundSchema: z.ZodType<
  V1BadgeSuggestTagsRequestBody$Outbound,
  z.ZodTypeDef,
  V1BadgeSuggestTagsRequestBody
> = z.object({
  badgeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgeSuggestTagsRequestBody$ {
  /** @deprecated use `V1BadgeSuggestTagsRequestBody$inboundSchema` instead. */
  export const inboundSchema = V1BadgeSuggestTagsRequestBody$inboundSchema;
  /** @deprecated use `V1BadgeSuggestTagsRequestBody$outboundSchema` instead. */
  export const outboundSchema = V1BadgeSuggestTagsRequestBody$outboundSchema;
  /** @deprecated use `V1BadgeSuggestTagsRequestBody$Outbound` instead. */
  export type Outbound = V1BadgeSuggestTagsRequestBody$Outbound;
}

export function v1BadgeSuggestTagsRequestBodyToJSON(
  v1BadgeSuggestTagsRequestBody: V1BadgeSuggestTagsRequestBody,
): string {
  return JSON.stringify(
    V1BadgeSuggestTagsRequestBody$outboundSchema.parse(
      v1BadgeSuggestTagsRequestBody,
    ),
  );
}

export function v1BadgeSuggestTagsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1BadgeSuggestTagsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BadgeSuggestTagsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BadgeSuggestTagsRequestBody' from JSON`,
  );
}
