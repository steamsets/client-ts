/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The app type
 */
export const V1AppDetailType = {
  Invalid: "invalid",
  Game: "game",
  Application: "application",
  Tool: "tool",
  Demo: "demo",
  Deprecated: "deprecated",
  Dlc: "dlc",
  Guide: "guide",
  Driver: "driver",
  Config: "config",
  Hardware: "hardware",
  Franchise: "franchise",
  Video: "video",
  Plugin: "plugin",
  Music: "music",
  Series: "series",
  Comic: "comic",
  Beta: "beta",
  Shortcut: "shortcut",
  DepotOnly: "depot_only",
} as const;
/**
 * The app type
 */
export type V1AppDetailType = ClosedEnum<typeof V1AppDetailType>;

export type V1AppDetail = {
  /**
   * The app id
   */
  appId: number;
  /**
   * The app image hash
   */
  image: string;
  /**
   * Whether the app is an event
   */
  isEvent: boolean;
  /**
   * Whether the app is a sale
   */
  isSale: boolean;
  /**
   * The apps id on itad
   */
  itadId: string;
  /**
   * The app name
   */
  name: string;
  /**
   * The app price
   */
  price: number;
  /**
   * The app short name
   */
  shortName: string;
  /**
   * The app type
   */
  type: V1AppDetailType;
};

/** @internal */
export const V1AppDetailType$inboundSchema: z.ZodNativeEnum<
  typeof V1AppDetailType
> = z.nativeEnum(V1AppDetailType);

/** @internal */
export const V1AppDetailType$outboundSchema: z.ZodNativeEnum<
  typeof V1AppDetailType
> = V1AppDetailType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AppDetailType$ {
  /** @deprecated use `V1AppDetailType$inboundSchema` instead. */
  export const inboundSchema = V1AppDetailType$inboundSchema;
  /** @deprecated use `V1AppDetailType$outboundSchema` instead. */
  export const outboundSchema = V1AppDetailType$outboundSchema;
}

/** @internal */
export const V1AppDetail$inboundSchema: z.ZodType<
  V1AppDetail,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.number().int(),
  image: z.string(),
  isEvent: z.boolean(),
  isSale: z.boolean(),
  itadId: z.string(),
  name: z.string(),
  price: z.number().int(),
  shortName: z.string(),
  type: V1AppDetailType$inboundSchema,
});

/** @internal */
export type V1AppDetail$Outbound = {
  appId: number;
  image: string;
  isEvent: boolean;
  isSale: boolean;
  itadId: string;
  name: string;
  price: number;
  shortName: string;
  type: string;
};

/** @internal */
export const V1AppDetail$outboundSchema: z.ZodType<
  V1AppDetail$Outbound,
  z.ZodTypeDef,
  V1AppDetail
> = z.object({
  appId: z.number().int(),
  image: z.string(),
  isEvent: z.boolean(),
  isSale: z.boolean(),
  itadId: z.string(),
  name: z.string(),
  price: z.number().int(),
  shortName: z.string(),
  type: V1AppDetailType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AppDetail$ {
  /** @deprecated use `V1AppDetail$inboundSchema` instead. */
  export const inboundSchema = V1AppDetail$inboundSchema;
  /** @deprecated use `V1AppDetail$outboundSchema` instead. */
  export const outboundSchema = V1AppDetail$outboundSchema;
  /** @deprecated use `V1AppDetail$Outbound` instead. */
  export type Outbound = V1AppDetail$Outbound;
}
