/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1UpdateImage = {
  /**
   * Whether the image is active or not, only one of each type can be active
   */
  active: boolean;
  /**
   * The image id to update
   */
  imageId: string;
};

/** @internal */
export const V1UpdateImage$inboundSchema: z.ZodType<
  V1UpdateImage,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  imageId: z.string(),
});

/** @internal */
export type V1UpdateImage$Outbound = {
  active: boolean;
  imageId: string;
};

/** @internal */
export const V1UpdateImage$outboundSchema: z.ZodType<
  V1UpdateImage$Outbound,
  z.ZodTypeDef,
  V1UpdateImage
> = z.object({
  active: z.boolean(),
  imageId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1UpdateImage$ {
  /** @deprecated use `V1UpdateImage$inboundSchema` instead. */
  export const inboundSchema = V1UpdateImage$inboundSchema;
  /** @deprecated use `V1UpdateImage$outboundSchema` instead. */
  export const outboundSchema = V1UpdateImage$outboundSchema;
  /** @deprecated use `V1UpdateImage$Outbound` instead. */
  export type Outbound = V1UpdateImage$Outbound;
}

export function v1UpdateImageToJSON(v1UpdateImage: V1UpdateImage): string {
  return JSON.stringify(V1UpdateImage$outboundSchema.parse(v1UpdateImage));
}

export function v1UpdateImageFromJSON(
  jsonString: string,
): SafeParseResult<V1UpdateImage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1UpdateImage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1UpdateImage' from JSON`,
  );
}
