/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  V1AppBadge,
  V1AppBadge$inboundSchema,
  V1AppBadge$Outbound,
  V1AppBadge$outboundSchema,
} from "./v1appbadge.js";

export type V1BadgesResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  dollarSchema?: string | undefined;
  badges: Array<V1AppBadge> | null;
};

/** @internal */
export const V1BadgesResponseBody$inboundSchema: z.ZodType<
  V1BadgesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  $schema: z.string().optional(),
  badges: z.nullable(z.array(V1AppBadge$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "$schema": "dollarSchema",
  });
});

/** @internal */
export type V1BadgesResponseBody$Outbound = {
  $schema?: string | undefined;
  badges: Array<V1AppBadge$Outbound> | null;
};

/** @internal */
export const V1BadgesResponseBody$outboundSchema: z.ZodType<
  V1BadgesResponseBody$Outbound,
  z.ZodTypeDef,
  V1BadgesResponseBody
> = z.object({
  dollarSchema: z.string().optional(),
  badges: z.nullable(z.array(V1AppBadge$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    dollarSchema: "$schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BadgesResponseBody$ {
  /** @deprecated use `V1BadgesResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1BadgesResponseBody$inboundSchema;
  /** @deprecated use `V1BadgesResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1BadgesResponseBody$outboundSchema;
  /** @deprecated use `V1BadgesResponseBody$Outbound` instead. */
  export type Outbound = V1BadgesResponseBody$Outbound;
}
