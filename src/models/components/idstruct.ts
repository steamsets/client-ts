/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type IDStruct = {
  /**
   * Account ID to search for
   */
  accountId?: number | undefined;
  /**
   * SteamID64 to search for
   */
  steamId64?: string | undefined;
};

/** @internal */
export const IDStruct$inboundSchema: z.ZodType<
  IDStruct,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.number().int().optional(),
  steamId64: z.string().optional(),
});

/** @internal */
export type IDStruct$Outbound = {
  accountId?: number | undefined;
  steamId64?: string | undefined;
};

/** @internal */
export const IDStruct$outboundSchema: z.ZodType<
  IDStruct$Outbound,
  z.ZodTypeDef,
  IDStruct
> = z.object({
  accountId: z.number().int().optional(),
  steamId64: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IDStruct$ {
  /** @deprecated use `IDStruct$inboundSchema` instead. */
  export const inboundSchema = IDStruct$inboundSchema;
  /** @deprecated use `IDStruct$outboundSchema` instead. */
  export const outboundSchema = IDStruct$outboundSchema;
  /** @deprecated use `IDStruct$Outbound` instead. */
  export type Outbound = IDStruct$Outbound;
}
