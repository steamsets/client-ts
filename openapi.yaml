components:
  schemas:
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    V1AccountsAppsResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1AccountsAppsResponseBody.json
          format: uri
          readOnly: true
          type: string
        apps:
          items:
            $ref: "#/components/schemas/V1App"
          nullable: true
          type: array
      required:
        - apps
      type: object
    V1App:
      additionalProperties: false
      properties:
        id:
          description: The Steam App ID
          example: 730
          format: int32
          type: integer
        image:
          description: The App's image URL
          example: https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/730/a1a2f9f3f4c0c2b1f8d3a4e5f6d7e8f9.jpg
          type: string
        name:
          description: The App's name
          example: "Counter-Strike: Global Offensive"
          type: string
        playtime:
          description: The Account's playtime in the App
          example: 123456
          format: int32
          type: integer
        price:
          description: How much the app costs
          example: 1200
          format: int32
          type: integer
        shortName:
          description: The App's short name
          example: csgo
          type: string
      required:
        - id
        - image
        - name
        - playtime
        - price
        - shortName
      type: object
    V1Badge:
      additionalProperties: false
      properties:
        appId:
          format: int32
          type: integer
        appImage:
          type: string
        appName:
          type: string
        appShortName:
          type: string
        badgeImage:
          type: string
        completedAt:
          format: date-time
          type: string
        isFoil:
          type: boolean
        level:
          format: int32
          type: integer
        name:
          type: string
        price:
          format: int32
          type: integer
        publicId:
          type: string
        scarcity:
          format: int32
          type: integer
        steamId:
          format: int32
          type: integer
        xp:
          format: int32
          type: integer
      required:
        - appId
        - appImage
        - appName
        - appShortName
        - badgeImage
        - completedAt
        - xp
        - isFoil
        - level
        - name
        - scarcity
        - steamId
        - price
        - publicId
      type: object
    V1BadgesResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1BadgesResponseBody.json
          format: uri
          readOnly: true
          type: string
        badges:
          items:
            $ref: "#/components/schemas/V1Badge"
          nullable: true
          type: array
      required:
        - badges
      type: object
    V1ConnectRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1ConnectRequestBody.json
          format: uri
          readOnly: true
          type: string
        code:
          description: The code from the oauth2 provider to verify
          example: "123456"
          type: string
        provider:
          description: The provider to connect with
          enum:
            - discord
            - patreon
            - kick
            - reddit
            - twitch
            - youtube
            - x
            - domain
          example: discord
          type: string
      required:
        - provider
        - code
      type: object
    V1ConnectResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1ConnectResponseBody.json
          format: uri
          readOnly: true
          type: string
        code:
          description: Code that has to be used to verify domain connections
          example: ABC123
          type: string
        success:
          description: Always true
          example: true
          type: boolean
      required:
        - success
      type: object
    V1LivenessResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1LivenessResponseBody.json
          format: uri
          readOnly: true
          type: string
        message:
          description: Whether we're alive or not
          example: OK
          type: string
      required:
        - message
      type: object
    V1UpdateConnectionRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1UpdateConnectionRequestBody.json
          format: uri
          readOnly: true
          type: string
        connectionId:
          description: The connection id to update
          example: "123456"
          type: string
        hiddem:
          description: Whether the connection should be hidden or not
          example: true
          type: boolean
      required:
        - connectionId
        - hiddem
      type: object
    V1UpdateConnectionResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1UpdateConnectionResponseBody.json
          format: uri
          readOnly: true
          type: string
        success:
          description: Always true
          example: true
          type: boolean
      required:
        - success
      type: object
    V1VerifyConnectionRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1VerifyConnectionRequestBody.json
          format: uri
          readOnly: true
          type: string
        connectionId:
          description: The connection id to verify
          example: "123456"
          type: string
      required:
        - connectionId
      type: object
    V1VerifyConnectionResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://api.steamsets.com/schemas/V1VerifyConnectionResponseBody.json
          format: uri
          readOnly: true
          type: string
        success:
          description: Always true
          example: true
          type: boolean
      required:
        - success
      type: object
  securitySchemes:
    apiKey:
      in: header
      name: api-key
      type: apiKey
    session:
      name: Authorization
      scheme: bearer
      type: http
info:
  title: SteamSets API
  version: 1.0.0
openapi: 3.0.3
paths:
  /account.v1.AccountService/Connect:
    post:
      operationId: account.v1.connection.connect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1ConnectRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1ConnectResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "422":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unprocessable Entity
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Connect a new Social Provider
      tags:
        - account
        - connection
  /account.v1.AccountService/DeleteConnection:
    post:
      operationId: account.v1.connection.deleteConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1UpdateConnectionRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1UpdateConnectionResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "422":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unprocessable Entity
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Remove a connection
      tags:
        - account
        - connection
  /account.v1.AccountService/GetApps:
    post:
      operationId: account.v1.getApps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1AccountsAppsResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Get Account Apps
      tags:
        - account
  /account.v1.AccountService/GetBadges:
    post:
      operationId: account.v1.getBadges
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1BadgesResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Get Account Badges
      tags:
        - account
  /account.v1.AccountService/UpdateConnection:
    post:
      operationId: account.v1.connection.updateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1UpdateConnectionRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1UpdateConnectionResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "404":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Not Found
        "422":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unprocessable Entity
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Make a connection visible/invisible
      tags:
        - account
        - connection
  /account.v1.AccountService/VerifyConnection:
    post:
      operationId: account.v1.connection.verifyConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1VerifyConnectionRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1VerifyConnectionResponseBody"
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad Request
        "422":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Unprocessable Entity
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      security:
        - session: []
      summary: Verify a domain connection only atm
      tags:
        - account
        - connection
  /v1/liveness:
    get:
      description: This endpoint checks if the service is alive.
      operationId: liveness
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1LivenessResponseBody"
          description: OK
        "500":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal Server Error
      summary: Liveness check
      tags:
        - liveness
servers:
  - url: https://api.steamsets.com
